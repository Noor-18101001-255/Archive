{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Icon } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Username = _useState2[0],\n      SetUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      SetPassword = _useState4[1];\n\n  useEffect(function () {\n    StatusBar.setBarStyle('light-content', true);\n  }, []);\n\n  var loginUser = function loginUser() {\n    if (Username.length <= 0) Alert.alert('Error', 'We Cant Help you without Username/Email');else if (Password.length <= 0) Alert.alert('Error', 'PLease provid us password');else {\n      if (Username == 'admin' && Password == '255') {\n        Alert.alert('Login Successfully', 'PLease wait');\n        props.navigation.navigate('Profile');\n        console.log('Coming Soon!');\n      } else {\n        Alert.alert('Login failed', 'Username or password is in correct');\n        console.log('Failed');\n      }\n    }\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    children: _jsxs(LinearGradient, {\n      colors: ['#222', '#222', '#111'],\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.welcomeText,\n        children: \"Welcome Back!\"\n      }), _jsx(Text, {\n        style: styles.loginText,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        placeholder: \"Email Address\",\n        placeholderTextColor: \"#808e9b\",\n        style: styles.input,\n        autoCorrect: true,\n        autoCompleteType: \"email\",\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        bind: Username,\n        onChangeText: function onChangeText(e) {\n          return SetUserName(e);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        placeholderTextColor: \"#808e9b\",\n        style: styles.input,\n        secureTextEntry: true,\n        textContentType: \"password\",\n        bind: Password,\n        onChangeText: function onChangeText(e) {\n          return SetPassword(e);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log('Coming Soon!');\n          Alert.alert('Coming Soon!', 'The Option Is not available yet');\n        },\n        children: _jsx(Text, {\n          style: styles.fpText,\n          children: \"Forgot Password?\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: loginUser,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Login\"\n        })\n      }), _jsxs(View, {\n        style: styles.loginWithBar,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          onPress: function onPress() {\n            console.log('Coming Soon!');\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n          },\n          children: _jsx(Icon, {\n            name: \"google\",\n            type: \"font-awesome\",\n            size: 30,\n            color: \"#808e9b\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          onPress: function onPress() {\n            console.log('Coming Soon!');\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n          },\n          children: _jsx(Icon, {\n            name: \"facebook-square\",\n            type: \"font-awesome\",\n            size: 30,\n            color: \"#808e9b\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          onPress: function onPress() {\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n          },\n          children: _jsx(Icon, {\n            name: \"apple\",\n            type: \"font-awesome\",\n            size: 30,\n            color: \"#808e9b\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.signUpTextView,\n        children: [_jsx(Text, {\n          style: styles.signUpText,\n          children: \"Don't have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n          },\n          children: _jsx(Text, {\n            style: [styles.signUpText, {\n              color: '#B53471'\n            }],\n            children: ' Sign Up'\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 20\n  },\n  welcomeText: {\n    fontSize: 30,\n    fontWeight: '900',\n    color: '#fff',\n    alignSelf: 'center'\n  },\n  loginText: {\n    color: '#fff',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#333',\n    borderRadius: 6,\n    marginTop: 10,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#808e9b'\n  },\n  fpText: {\n    alignSelf: 'flex-end',\n    color: '#B33771',\n    fontSize: 18,\n    fontWeight: '600',\n    marginTop: 10\n  },\n  loginButton: {\n    backgroundColor: '#833471',\n    paddingVertical: 12,\n    borderRadius: 6,\n    marginTop: 20\n  },\n  loginButtonText: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#fafafa',\n    alignSelf: 'center'\n  },\n  loginWithBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 50\n  },\n  iconButton: {\n    backgroundColor: '#333',\n    padding: 14,\n    marginHorizontal: 10,\n    borderRadius: 100\n  },\n  signUpTextView: {\n    marginTop: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  signUpText: {\n    color: '#808e9b',\n    fontSize: 20,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/ui/LoginScreen.jsx"],"names":["React","useEffect","useState","LinearGradient","Icon","LoginScreen","props","Username","SetUserName","Password","SetPassword","StatusBar","setBarStyle","loginUser","length","Alert","alert","navigation","navigate","console","log","Keyboard","dismiss","styles","container","welcomeText","loginText","input","e","fpText","loginButton","loginButtonText","loginWithBar","iconButton","signUpTextView","signUpText","color","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","fontWeight","alignSelf","marginTop","marginBottom","width","height","backgroundColor","borderRadius","paddingVertical","display","flexDirection","justifyContent","padding","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  StatusBar,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Icon } from 'react-native-elements';\r\n\r\n\r\nexport default  function LoginScreen(props) {\r\n  const [Username, SetUserName] = useState('');\r\n  const [Password, SetPassword] = useState('');\r\n  useEffect(() => {\r\n    StatusBar.setBarStyle('light-content', true);\r\n  }, []);\r\n\r\n  const loginUser = () => {\r\n    if (Username.length <= 0)\r\n      Alert.alert('Error', 'We Cant Help you without Username/Email');\r\n    else if (Password.length <= 0)\r\n      Alert.alert('Error', 'PLease provid us password');\r\n    else {\r\n      if (Username == 'admin' && Password == '255') {\r\n        Alert.alert('Login Successfully', 'PLease wait');\r\n        props.navigation.navigate('Profile');\r\n        console.log('Coming Soon!');\r\n      } \r\n      else {\r\n        Alert.alert('Login failed', 'Username or password is in correct');\r\n\r\n        console.log('Failed');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <TouchableWithoutFeedback\r\n      onPress={() => {\r\n        Keyboard.dismiss();\r\n      }}>\r\n      <LinearGradient\r\n        //colors={['#222', '#222', '#111']}\r\n        colors={['#222', '#222', '#111']}\r\n        style={styles.container}>\r\n        <Text style={styles.welcomeText}>Welcome Back!</Text>\r\n        <Text style={styles.loginText}>Login</Text>\r\n        <TextInput\r\n          placeholder=\"Email Address\"\r\n          placeholderTextColor=\"#808e9b\"\r\n          style={styles.input}\r\n          autoCorrect={true}\r\n          // autoCapitalize={false}\r\n          autoCompleteType=\"email\"\r\n          keyboardType=\"email-address\"\r\n          textContentType=\"emailAddress\"\r\n          bind={Username}\r\n          onChangeText={(e) => SetUserName(e)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#808e9b\"\r\n          style={styles.input}\r\n          secureTextEntry={true}\r\n          textContentType=\"password\"\r\n          bind={Password}\r\n          onChangeText={(e) => SetPassword(e)}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            console.log('Coming Soon!');\r\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n          }}>\r\n          <Text style={styles.fpText}>Forgot Password?</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.loginButton} onPress={loginUser}>\r\n          <Text style={styles.loginButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.loginWithBar}>\r\n          <TouchableOpacity\r\n            style={styles.iconButton}\r\n            onPress={() => {\r\n              console.log('Coming Soon!');\r\n              Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n            }}>\r\n            <Icon name=\"google\" type=\"font-awesome\" size={30} color=\"#808e9b\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.iconButton}\r\n            onPress={() => {\r\n              console.log('Coming Soon!');\r\n              Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n            }}>\r\n            <Icon\r\n              name=\"facebook-square\"\r\n              type=\"font-awesome\"\r\n              size={30}\r\n              color=\"#808e9b\"\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.iconButton}\r\n            onPress={() => {\r\n              Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n            }}>\r\n            <Icon name=\"apple\" type=\"font-awesome\" size={30} color=\"#808e9b\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.signUpTextView}>\r\n          <Text style={styles.signUpText}>Don't have an account?</Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n            }}>\r\n            <Text style={[styles.signUpText, { color: '#B53471' }]}>\r\n              {' Sign Up'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </LinearGradient>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 50,\r\n    paddingHorizontal: 20,\r\n  },\r\n  welcomeText: {\r\n    fontSize: 30,\r\n    fontWeight: '900',\r\n    color: '#fff',\r\n    alignSelf: 'center',\r\n  },\r\n  loginText: {\r\n    color: '#fff',\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#333',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#808e9b',\r\n  },\r\n  fpText: {\r\n    alignSelf: 'flex-end',\r\n    color: '#B33771',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#833471',\r\n    paddingVertical: 12,\r\n    borderRadius: 6,\r\n    marginTop: 20,\r\n  },\r\n  loginButtonText: {\r\n    fontSize: 20,\r\n    fontWeight: '500',\r\n    color: '#fafafa',\r\n    alignSelf: 'center',\r\n  },\r\n  loginWithBar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 50,\r\n  },\r\n  iconButton: {\r\n    backgroundColor: '#333',\r\n    padding: 14,\r\n    marginHorizontal: 10,\r\n    borderRadius: 100,\r\n  },\r\n  signUpTextView: {\r\n    marginTop: 40,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  signUpText: {\r\n    color: '#808e9b',\r\n    fontSize: 20,\r\n    fontWeight: '500',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}