{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Login from \"../Components/Login\";\nimport User from \"../Models/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen(props) {\n  var _React$useState = React.useState(new User('', '', '', '', '', '')),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      NewUser = _React$useState2[0],\n      SetNewUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Username = _React$useState4[0],\n      SetUserName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      Password = _React$useState6[0],\n      SetPassword = _React$useState6[1];\n\n  React.useEffect(function () {\n    StatusBar.setBarStyle('light-content', true);\n  }, []);\n\n  var handleNewUser = function handleNewUser(e) {\n    _objectDestructuringEmpty(e.target);\n\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var SignUpUser = function SignUpUser() {\n    console.log(NewUser);\n    if (Username.length <= 0) Alert.alert('Error', 'We Cant Help you without Username/Email');else if (Password.length <= 0) Alert.alert('Error', 'PLease provid us password');else {\n      if (Username == 'admin' && Password == '255') {\n        Alert.alert('Login Successfully', 'PLease wait');\n        console.log('Logined');\n        props.navigation.navigate('LoginScreen');\n      } else {\n        Alert.alert('Login failed', 'Username or password is in correct');\n        console.log('Failed');\n      }\n    }\n  };\n\n  return _jsxs(Login, {\n    Title: \"SignUp\",\n    loginUser: SignUpUser,\n    navigation: props.navigation,\n    children: [_jsx(TextInput, {\n      placeholder: \"First Name\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.firstName,\n      onChangeText: handleNewUser\n    }), _jsx(TextInput, {\n      placeholder: \"Last Name\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.lastName,\n      onChangeText: handleNewUser\n    }), _jsx(TextInput, {\n      placeholder: \"Username\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.Username,\n      onChangeText: handleNewUser\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      bind: NewUser.password,\n      onChangeText: handleNewUser\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#333',\n    borderRadius: 6,\n    marginTop: 10,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#808e9b'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/SignUpScreen.js"],"names":["React","Login","User","SignUpScreen","props","useState","NewUser","SetNewUser","Username","SetUserName","Password","SetPassword","useEffect","StatusBar","setBarStyle","handleNewUser","e","target","setState","prevState","name","value","SignUpUser","console","log","length","Alert","alert","navigation","navigate","styles","input","firstName","lastName","password","StyleSheet","create","width","height","backgroundColor","borderRadius","marginTop","paddingHorizontal","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View,Text,TextInput,Alert,StatusBar,TouchableOpacity,StyleSheet } from 'react-native';\r\nimport  Login from '../Components/Login';\r\nimport  User from '../Models/User';\r\n\r\nconst SignUpScreen = (props) => {\r\n\r\n  const [NewUser , SetNewUser] = React.useState(new User('','','','','',''));\r\n  const [Username , SetUserName] = React.useState('');\r\n  const [Password, SetPassword] = React.useState('');\r\n  React.useEffect(() => {\r\n    StatusBar.setBarStyle('light-content', true);\r\n  }, []);\r\n\r\n  const handleNewUser = e => {\r\n    const {} = e.target;\r\n\r\n    // console.log(name+\": \"+value);\r\n    setState(prevState => ({\r\n        ...prevState,\r\n        [name]: value\r\n    }));\r\n};\r\n\r\n  const SignUpUser = () => {\r\n    console.log(NewUser);\r\n    if (Username.length <= 0)\r\n      Alert.alert('Error', 'We Cant Help you without Username/Email');\r\n    else if (Password.length <= 0)\r\n      Alert.alert('Error', 'PLease provid us password');\r\n    else {\r\n      if (Username == 'admin' && Password == '255') {\r\n        Alert.alert('Login Successfully', 'PLease wait');\r\n        console.log('Logined');\r\n        props.navigation.navigate('LoginScreen');\r\n      } \r\n      else {\r\n        Alert.alert('Login failed', 'Username or password is in correct');\r\n\r\n        console.log('Failed');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Login Title=\"SignUp\" loginUser={SignUpUser}  navigation={props.navigation}>\r\n    <TextInput\r\n       placeholder=\"First Name\"\r\n       placeholderTextColor=\"#808e9b\"\r\n       style={styles.input}\r\n       autoCorrect={true}\r\n       // autoCapitalize={false}\r\n       autoCompleteType=\"name\"\r\n       keyboardType=\"default\"\r\n       textContentType=\"name\"\r\n       bind={NewUser.firstName}\r\n       onChangeText={handleNewUser}\r\n     />\r\n      <TextInput\r\n       placeholder=\"Last Name\"\r\n       placeholderTextColor=\"#808e9b\"\r\n       style={styles.input}\r\n       autoCorrect={true}\r\n       // autoCapitalize={false}\r\n       autoCompleteType=\"name\"\r\n       keyboardType=\"default\"\r\n       textContentType=\"name\"\r\n       bind={NewUser.lastName}\r\n       onChangeText={handleNewUser}\r\n     />\r\n      <TextInput\r\n       placeholder=\"Username\"\r\n       placeholderTextColor=\"#808e9b\"\r\n       style={styles.input}\r\n       autoCorrect={true}\r\n       // autoCapitalize={false}\r\n       autoCompleteType=\"name\"\r\n       keyboardType=\"default\"\r\n       textContentType=\"name\"\r\n       bind={NewUser.Username}\r\n       onChangeText={handleNewUser}\r\n     />\r\n     <TextInput\r\n       placeholder=\"Password\"\r\n       placeholderTextColor=\"#808e9b\"\r\n       style={styles.input}\r\n       secureTextEntry={true}\r\n       textContentType=\"password\"\r\n       bind={NewUser.password}\r\n       onChangeText={handleNewUser}\r\n     />\r\n </Login>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#333',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#808e9b',\r\n  },\r\n   \r\n});\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}