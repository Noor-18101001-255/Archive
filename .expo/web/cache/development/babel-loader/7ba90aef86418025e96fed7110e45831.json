{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Login from \"../Components/Login\";\nimport User from \"../Models/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen(props) {\n  var _React$useState = React.useState(new User('', '', '', '', '', '')),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      NewUser = _React$useState2[0],\n      SetNewUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      profilePic = _React$useState4[0],\n      SetProfilePic = _React$useState4[1];\n\n  var handleNewUser = function handleNewUser(name, value) {\n    SetNewUser(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var SignUpUser = function SignUpUser() {\n    var response;\n    return _regeneratorRuntime.async(function SignUpUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(Object.values(NewUser).length);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://localhost:44330/Home'));\n\n          case 3:\n            response = _context.sent;\n            _context.t0 = console;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, _context.t1);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _ImagePicker$useCamer = ImagePicker.useCameraPermissions(),\n      _ImagePicker$useCamer2 = _slicedToArray(_ImagePicker$useCamer, 2),\n      status = _ImagePicker$useCamer2[0],\n      requestPermission = _ImagePicker$useCamer2[1];\n\n  var pickImage = function pickImage() {\n    var result, localUri, filename;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!status) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              base64: true,\n              allowsEditing: true,\n              aspect: [4, 4],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              localUri = result.uri;\n              filename = localUri.split('/').pop();\n              SetProfilePic(result.uri);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            console.warn(\"Give Camera Access to use this feature\");\n            ImagePicker.requestMediaLibraryPermissionsAsync(true);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Login, {\n    Title: \"SignUp\",\n    loginUser: SignUpUser,\n    ProfilePic: profilePic,\n    navigation: props.navigation,\n    ChooseImage: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", pickImage);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \"First Name\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.firstName,\n      onChangeText: function onChangeText(e) {\n        return handleNewUser('firstName', e);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Last Name\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.lastName,\n      onChangeText: function onChangeText(e) {\n        return handleNewUser('lastName', e);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Username\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: NewUser.username,\n      onChangeText: function onChangeText(e) {\n        return handleNewUser('username', e);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      bind: NewUser.password,\n      onChangeText: function onChangeText(e) {\n        return handleNewUser('password', e);\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#333',\n    borderRadius: 6,\n    marginTop: 10,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#808e9b'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/SignUpScreen.js"],"names":["React","ImagePicker","Login","User","SignUpScreen","props","useState","NewUser","SetNewUser","profilePic","SetProfilePic","handleNewUser","name","value","prevState","SignUpUser","console","log","Object","values","length","fetch","response","json","useCameraPermissions","status","requestPermission","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","base64","allowsEditing","aspect","quality","result","cancelled","localUri","uri","filename","split","pop","warn","requestMediaLibraryPermissionsAsync","navigation","styles","input","firstName","e","lastName","username","password","StyleSheet","create","width","height","backgroundColor","borderRadius","marginTop","paddingHorizontal","fontSize","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAGA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE9B,wBAA8BL,KAAK,CAACM,QAAN,CAAe,IAAIH,IAAJ,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CAAf,CAA9B;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAoCR,KAAK,CAACM,QAAN,CAAe,IAAf,CAApC;AAAA;AAAA,MAAOG,UAAP;AAAA,MAAmBC,aAAnB;;AAMA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAGrCL,IAAAA,UAAU,CAAC,UAAAM,SAAS;AAAA,6CACfA,SADe,2BAEjBF,IAFiB,EAEVC,KAFU;AAAA,KAAV,CAAV;AAID,GAPD;;AASA,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcZ,OAAd,EAAuBa,MAAnC;AADiB;AAAA,6CAEIC,KAAK,CAAC,8BAAD,CAFT;;AAAA;AAEbC,YAAAA,QAFa;AAAA,0BAGjBN,OAHiB;AAAA;AAAA,6CAGEM,QAAQ,CAACC,IAAT,EAHF;;AAAA;AAAA;;AAAA,wBAGTN,GAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AASA,8BAAoChB,WAAW,CAACuB,oBAAZ,EAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,iBAAf;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACZF,MADY;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAIKxB,WAAW,CAAC2B,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAE5B,WAAW,CAAC6B,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,MAAM,EAAE,IAF6C;AAGrDC,cAAAA,aAAa,EAAE,IAHsC;AAIrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJ6C;AAKrDC,cAAAA,OAAO,EAAE;AAL4C,aAApC,CAJL;;AAAA;AAIVC,YAAAA,MAJU;;AAYd,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AAIjBC,cAAAA,QAJiB,GAINF,MAAM,CAACG,GAJD;AAMjBC,cAAAA,QANiB,GAMNF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EANM;AAgCrBhC,cAAAA,aAAa,CAAC0B,MAAM,CAACG,GAAR,CAAb;AACD;;AA7Ca;AAAA;;AAAA;AAiDdvB,YAAAA,OAAO,CAAC2B,IAAR,CAAa,wCAAb;AACA1C,YAAAA,WAAW,CAAC2C,mCAAZ,CAAgD,IAAhD;;AAlDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAsDA,SACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAE7B,UAAjC;AAA6C,IAAA,UAAU,EAAEN,UAAzD;AAAqE,IAAA,UAAU,EAAEJ,KAAK,CAACwC,UAAvF;AAAmG,IAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAASlB,SAAT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhH;AAAA,eACE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,oBAAoB,EAAC,SAFvB;AAGE,MAAA,KAAK,EAAEmB,MAAM,CAACC,KAHhB;AAIE,MAAA,WAAW,EAAE,IAJf;AAME,MAAA,gBAAgB,EAAC,MANnB;AAOE,MAAA,YAAY,EAAC,SAPf;AAQE,MAAA,eAAe,EAAC,MARlB;AASE,MAAA,IAAI,EAAExC,OAAO,CAACyC,SAThB;AAUE,MAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,eAAOtC,aAAa,CAAC,WAAD,EAAcsC,CAAd,CAApB;AAAA;AAVhB,MADF,EAaE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,oBAAoB,EAAC,SAFvB;AAGE,MAAA,KAAK,EAAEH,MAAM,CAACC,KAHhB;AAIE,MAAA,WAAW,EAAE,IAJf;AAME,MAAA,gBAAgB,EAAC,MANnB;AAOE,MAAA,YAAY,EAAC,SAPf;AAQE,MAAA,eAAe,EAAC,MARlB;AASE,MAAA,IAAI,EAAExC,OAAO,CAAC2C,QAThB;AAUE,MAAA,YAAY,EAAE,sBAACD,CAAD;AAAA,eAAOtC,aAAa,CAAC,UAAD,EAAasC,CAAb,CAApB;AAAA;AAVhB,MAbF,EAyBE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,oBAAoB,EAAC,SAFvB;AAGE,MAAA,KAAK,EAAEH,MAAM,CAACC,KAHhB;AAIE,MAAA,WAAW,EAAE,IAJf;AAME,MAAA,gBAAgB,EAAC,MANnB;AAOE,MAAA,YAAY,EAAC,SAPf;AAQE,MAAA,eAAe,EAAC,MARlB;AASE,MAAA,IAAI,EAAExC,OAAO,CAAC4C,QAThB;AAUE,MAAA,YAAY,EAAE,sBAACF,CAAD;AAAA,eAAOtC,aAAa,CAAC,UAAD,EAAasC,CAAb,CAApB;AAAA;AAVhB,MAzBF,EAqCE,KAAC,SAAD;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,oBAAoB,EAAC,SAFvB;AAGE,MAAA,KAAK,EAAEH,MAAM,CAACC,KAHhB;AAIE,MAAA,eAAe,EAAE,IAJnB;AAKE,MAAA,eAAe,EAAC,UALlB;AAME,MAAA,IAAI,EAAExC,OAAO,CAAC6C,QANhB;AAOE,MAAA,YAAY,EAAE,sBAACH,CAAD;AAAA,eAAOtC,aAAa,CAAC,UAAD,EAAasC,CAAb,CAApB;AAAA;AAPhB,MArCF;AAAA,IADF;AAmDD,CAtID;;AAyIA,IAAMH,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAE/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,eAAe,EAAE,MAHZ;AAILC,IAAAA,YAAY,EAAE,CAJT;AAKLC,IAAAA,SAAS,EAAE,EALN;AAMLC,IAAAA,iBAAiB,EAAE,EANd;AAOLC,IAAAA,QAAQ,EAAE,EAPL;AAQLC,IAAAA,KAAK,EAAE;AARF;AAFwB,CAAlB,CAAf;AAeA,eAAe1D,YAAf","sourcesContent":["import React from 'react';\r\nimport { View, Text, TextInput, Alert, StatusBar, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Login from '../Components/Login';\r\nimport User from '../Models/User';\r\n\r\nconst SignUpScreen = (props) => {\r\n\r\n  const [NewUser, SetNewUser] = React.useState(new User('', '', '', '', '', ''));\r\n  const [profilePic, SetProfilePic] = React.useState(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleNewUser = (name, value) => {\r\n\r\n    // console.log(name+\": \"+value);\r\n    SetNewUser(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const SignUpUser = async () => {\r\n    console.log(Object.values(NewUser).length);\r\n    let response = await fetch('https://localhost:44330/Home')\r\n    console.log( await response.json());\r\n\r\n  };\r\n\r\n\r\n\r\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\r\n\r\n  const pickImage = async () => {\r\n    if (status) {\r\n\r\n      // No permissions request is necessary for launching the image library\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        base64: true,\r\n        allowsEditing: true,\r\n        aspect: [4, 4],\r\n        quality: 1,\r\n      });\r\n\r\n      if (!result.cancelled) {\r\n        // setImage(result.base64);\r\n        // let apiUrl = \"https://localhost:44330/Home\";\r\n        // let apiUrl = \"http://fbdm.somee.com/Home/UploadPicture\";\r\n        let localUri = result.uri;\r\n        // let localUri = result.base64;\r\n        let filename = localUri.split('/').pop();\r\n\r\n         \r\n        // let data = {'title': filename, 'uri': result.base64};\r\n\r\n       \r\n      // console.log(data);\r\n      \r\n        // let options = {\r\n        //   method: 'POST',\r\n        //   body: JSON.stringify(data),\r\n        //   headers: {\r\n        //     // Accept: 'application/json',\r\n        //     // 'Content-Type': 'multipart/form-data',\r\n        //     'Content-Type': 'application/json',\r\n        //     'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5',\r\n        //   },\r\n        // };\r\n        \r\n      \r\n          // let response = await fetch(apiUrl, options).catch((error)=>{\r\n          //   console.log(error);\r\n          //   throw error;\r\n          // });\r\n          // console.log(response.status);\r\n         \r\n        SetProfilePic(result.uri);\r\n      }\r\n    }\r\n\r\n    else {\r\n      console.warn(\"Give Camera Access to use this feature\");\r\n      ImagePicker.requestMediaLibraryPermissionsAsync(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Login Title=\"SignUp\" loginUser={SignUpUser} ProfilePic={profilePic} navigation={props.navigation} ChooseImage={async()=>pickImage} >\r\n      <TextInput\r\n        placeholder=\"First Name\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"name\"\r\n        keyboardType=\"default\"\r\n        textContentType=\"name\"\r\n        bind={NewUser.firstName}\r\n        onChangeText={(e) => handleNewUser('firstName', e)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Last Name\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"name\"\r\n        keyboardType=\"default\"\r\n        textContentType=\"name\"\r\n        bind={NewUser.lastName}\r\n        onChangeText={(e) => handleNewUser('lastName', e)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Username\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"name\"\r\n        keyboardType=\"default\"\r\n        textContentType=\"name\"\r\n        bind={NewUser.username}\r\n        onChangeText={(e) => handleNewUser('username', e,)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        secureTextEntry={true}\r\n        textContentType=\"password\"\r\n        bind={NewUser.password}\r\n        onChangeText={(e) => handleNewUser('password', e,)}\r\n      />\r\n\r\n\r\n    </Login>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#333',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#808e9b',\r\n  },\r\n\r\n});\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}