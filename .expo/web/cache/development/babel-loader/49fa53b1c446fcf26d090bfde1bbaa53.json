{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Constants from \"./Constants\";\n\nvar GlobalMethods = function () {\n  function GlobalMethods() {\n    _classCallCheck(this, GlobalMethods);\n  }\n\n  _createClass(GlobalMethods, null, [{\n    key: \"fetchUseById\",\n    value: function fetchUseById(id) {\n      var option, res;\n      return _regeneratorRuntime.async(function fetchUseById$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              option = {\n                method: 'POST',\n                body: \"\\\"\" + id + \"\\\"\",\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\n                }\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(Constants.GetUserById, option));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"GetAllCats\",\n    value: function GetAllCats() {\n      var option, res;\n      return _regeneratorRuntime.async(function GetAllCats$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              option = {\n                method: 'Get'\n              };\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch(Constants.GetallCatagory, option));\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"GetAllProductsByCatagory\",\n    value: function GetAllProductsByCatagory() {\n      var option, res;\n      return _regeneratorRuntime.async(function GetAllProductsByCatagory$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              option = {\n                method: 'Get'\n              };\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetch(Constants.ProductByCatagory, option));\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return GlobalMethods;\n}();\n\nexport default GlobalMethods;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Models/GlobalMethods.js"],"names":["Constants","GlobalMethods","id","option","method","body","headers","fetch","GetUserById","res","json","GetallCatagory","ProductByCatagory"],"mappings":";;;AAAA,OAAOA,SAAP;;IAEMC,a;AACJ,2BAAa;AAAA;AAAE;;;;WACf,sBAA0BC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMC,cAAAA,MAFN,GAEe;AACXC,gBAAAA,MAAM,EAAE,MADG;AAEXC,gBAAAA,IAAI,SAAOH,EAAP,OAFO;AAIXI,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiB;AAFV;AAJE,eAFf;AAAA;AAAA,+CAYkBC,KAAK,CAACP,SAAS,CAACQ,WAAX,EAAwBL,MAAxB,CAZvB;;AAAA;AAYMM,cAAAA,GAZN;AAAA;AAAA,+CAeeA,GAAG,CAACC,IAAJ,EAff;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACMP,cAAAA,MADN,GACe;AACXC,gBAAAA,MAAM,EAAE;AADG,eADf;AAAA;AAAA,+CASkBG,KAAK,CAACP,SAAS,CAACW,cAAX,EAA2BR,MAA3B,CATvB;;AAAA;AASMM,cAAAA,GATN;AAAA;AAAA,+CAYeA,GAAG,CAACC,IAAJ,EAZf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACMP,cAAAA,MADN,GACe;AACXC,gBAAAA,MAAM,EAAE;AADG,eADf;AAAA;AAAA,+CASkBG,KAAK,CAACP,SAAS,CAACY,iBAAX,EAA8BT,MAA9B,CATvB;;AAAA;AASMM,cAAAA,GATN;AAAA;AAAA,+CAYeA,GAAG,CAACC,IAAJ,EAZf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAiBF,eAAeT,aAAf","sourcesContent":["import Constants from \"./Constants\";\r\n\r\nclass GlobalMethods  {\r\n  constructor(){}\r\n  static async fetchUseById(id) {\r\n\r\n    let option = {\r\n      method: 'POST',\r\n      body: `\\\"${id}\\\"`,\r\n      // body: `\\\"18875a4d-91fd-4b6c-a11b-343dd689f084\\\"`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\r\n      }\r\n    };\r\n\r\n    let res = await fetch(Constants.GetUserById, option)\r\n    // let data = await res.json();\r\n    // console.log(data);\r\n    return(await res.json());\r\n  }\r\n\r\n  static async GetAllCats(){\r\n    let option = {\r\n      method: 'Get',\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      //   'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\r\n      // }\r\n    };\r\n\r\n    let res = await fetch(Constants.GetallCatagory, option)\r\n    // let data = await res.json();\r\n    // console.log(data);\r\n    return(await res.json());\r\n  }\r\n\r\n  static async GetAllProductsByCatagory(){\r\n    let option = {\r\n      method: 'Get',\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      //   'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\r\n      // }\r\n    };\r\n\r\n    let res = await fetch(Constants.ProductByCatagory, option)\r\n    // let data = await res.json();\r\n    // console.log(data);\r\n    return(await res.json());\r\n  }\r\n \r\n}\r\n\r\nexport default GlobalMethods;"]},"metadata":{},"sourceType":"module"}