{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport uuid from 'react-native-uuid';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport * as ImagePicker from 'expo-image-picker';\nimport Login from \"../Components/Login\";\nimport User from \"../Models/User\";\nimport Constants from \"../Models/Constants\";\nimport DropDownPicker from \"react-native-custom-dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Product = _React$useState2[0],\n      SetProduct = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Images = _React$useState4[0],\n      SetImages = _React$useState4[1];\n\n  var _ImagePicker$useCamer = ImagePicker.useCameraPermissions(),\n      _ImagePicker$useCamer2 = _slicedToArray(_ImagePicker$useCamer, 2),\n      status = _ImagePicker$useCamer2[0],\n      requestPermission = _ImagePicker$useCamer2[1];\n\n  var countries = [\"Egypt\", \"Canada\", \"Australia\", \"Ireland\"];\n\n  var handleProduct = function handleProduct(name, value) {\n    SetProduct(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var ValueChecker = function ValueChecker(val) {\n    return val.length > 0;\n  };\n\n  var SignUpUser = function SignUpUser() {};\n\n  var UsernameCheck = function UsernameCheck() {\n    var data = new String(NewUser.username);\n    console.log(data);\n    var option = {\n      method: 'POST',\n      body: \"\\\"\" + NewUser.username + \"\\\"\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\n      }\n    };\n    fetch(Constants.UsernameAvailability, option).then(function (x) {\n      return x.json();\n    }).then(function (data) {\n      if (!data) {\n        Alert.alert(\"username Already exist\");\n        console.log(\"username Already exist\");\n        SetNewUser(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            'username': ''\n          });\n        });\n      }\n    });\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!status) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              base64: true,\n              allowsEditing: true,\n              aspect: [2, 2],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              SetProfileTitle('wp5299018.jpg');\n              SetImages(result.uri);\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            console.warn(\"Give Camera Access to use this feature\");\n            ImagePicker.requestMediaLibraryPermissionsAsync(true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Login, {\n    Title: \"Create Product\",\n    loginUser: SignUpUser,\n    Images: Images,\n    navigation: props.navigation,\n    ChooseImage: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", pickImage());\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \"Name\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"name\",\n      keyboardType: \"default\",\n      textContentType: \"name\",\n      bind: Product.Name,\n      Value: Product.Name,\n      onChangeText: function onChangeText(e) {\n        return handleProduct('Name', e);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Quantity\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"number\",\n      keyboardType: \"number-pad\",\n      bind: Product.Quantity,\n      value: Product.Quantity,\n      onChangeText: function onChangeText(e) {\n        return handleProduct('Quantity', e.replace(/[^0-9]/g, ''));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Price\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"number\",\n      keyboardType: \"number-pad\",\n      bind: Product.Price,\n      value: Product.Price,\n      onChangeText: function onChangeText(e) {\n        return handleProduct('Price', e.replace(/[^0-9]/g, ''));\n      }\n    }), _jsx(DropDownPicker, {\n      items: [{\n        label: 'UK',\n        value: 'uk',\n        icon: function icon() {\n          return _jsx(Icon, {\n            name: \"flag\",\n            size: 18,\n            color: \"#900\"\n          });\n        }\n      }, {\n        label: 'France',\n        value: 'france',\n        icon: function icon() {\n          return _jsx(Icon, {\n            name: \"flag\",\n            size: 18,\n            color: \"#900\"\n          });\n        }\n      }],\n      defaultValue: _this.state.country,\n      containerStyle: {\n        height: 40\n      },\n      style: {\n        backgroundColor: '#fafafa'\n      },\n      itemStyle: {\n        justifyContent: 'flex-start'\n      },\n      dropDownStyle: {\n        backgroundColor: '#fafafa'\n      },\n      onChangeItem: function onChangeItem(item) {\n        return console.log(item);\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#333',\n    borderRadius: 6,\n    marginTop: 10,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#808e9b'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/CreateProduct.js"],"names":["React","uuid","SelectDropdown","ImagePicker","Login","User","Constants","DropDownPicker","SignUpScreen","props","useState","Product","SetProduct","Images","SetImages","useCameraPermissions","status","requestPermission","countries","handleProduct","name","value","prevState","ValueChecker","val","length","SignUpUser","UsernameCheck","data","String","NewUser","username","console","log","option","method","body","headers","fetch","UsernameAvailability","then","x","json","Alert","alert","SetNewUser","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","base64","allowsEditing","aspect","quality","result","cancelled","SetProfileTitle","uri","warn","requestMediaLibraryPermissionsAsync","navigation","styles","input","Name","e","Quantity","replace","Price","label","icon","state","country","height","backgroundColor","justifyContent","item","StyleSheet","create","width","borderRadius","marginTop","paddingHorizontal","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, TextInput, Alert, StatusBar, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport uuid from 'react-native-uuid';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Login from '../Components/Login';\r\nimport User from '../Models/User';\r\nimport Constants from '../Models/Constants';\r\n// import Dropdown from '../Components/Dropdown';\r\nimport DropDownPicker from \"react-native-custom-dropdown\";\r\nconst SignUpScreen = (props) => {\r\n\r\n  const [Product, SetProduct] = React.useState([]);\r\n  const [Images, SetImages] = React.useState([]);\r\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\r\n  const countries = [\"Egypt\", \"Canada\", \"Australia\", \"Ireland\"]\r\n  const handleProduct = (name, value) => {\r\n\r\n    // console.log(name+\": \"+value);\r\n    SetProduct(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  const ValueChecker = (val) => val.length > 0\r\n  const SignUpUser = () => { }\r\n  // const SignUpUser = () => {\r\n  //   let user = NewUser;\r\n  //   user.id = uuid.v4();\r\n  //   user.picture = 'uuid.v4()';\r\n  //   if (Images === null) {\r\n  //     Alert.alert(\"Please Choose Profile Photo\");\r\n  //     console.log(\"Please Choose Profile Photo\");\r\n\r\n  //   }\r\n  //   else if (ValueChecker(user.firstName) && ValueChecker(user.lastName) &&\r\n  //     ValueChecker(user.username) && ValueChecker(user.password)\r\n  //   ) {\r\n\r\n\r\n  //     let data = JSON.stringify({\r\n  //       id: user.id,\r\n  //       firstName: user.firstName,\r\n  //       lastName: user.lastName,\r\n  //       username: user.username,\r\n  //       password: user.password,\r\n  //       picture: user.picture,\r\n  //       image: {\r\n  //         uri: Images,\r\n  //       }\r\n  //     });\r\n  //     let options = {\r\n  //       method: 'POST',\r\n  //       body: data,\r\n  //       headers: {\r\n  //         // Accept: 'application/json',\r\n  //         // 'Content-Type': 'multipart/form-data',\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5',\r\n  //       },\r\n  //     };\r\n\r\n  //     fetch(Constants.SignUp, options).then(x => x.text())\r\n  //       .then(x => {\r\n  //         var validate = require('uuid-validate');\r\n  //         if (validate(x)) {\r\n  //           Alert.alert('Login Successfully', 'PLease wait');\r\n  //           console.log('Logined');\r\n  //           props.navigation.navigate('Profile', {\r\n  //             UserId: x,\r\n  //             name: NewUser.username,\r\n  //           });\r\n  //         }\r\n  //         else {\r\n  //           Alert.alert('Login Failed', 'x');\r\n  //           console.log('Failes');\r\n  //         }\r\n  //       }).catch((error) => {\r\n  //         console.log(error);\r\n  //         // throw error;\r\n  //       });\r\n  //   }\r\n  //   else {\r\n  //     Alert.alert(\"Please fill all fields\");\r\n  //     console.log(\"Please fill all fields\");\r\n  //   }\r\n\r\n\r\n  // };\r\n\r\n  const UsernameCheck = () => {\r\n\r\n    var data = new String(NewUser.username);\r\n\r\n    console.log(data);\r\n    let option = {\r\n      method: 'POST',\r\n\r\n      body: `\\\"${NewUser.username}\\\"`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\r\n      }\r\n    };\r\n    fetch(Constants.UsernameAvailability, option).then(x => x.json()).then(\r\n      (data) => {\r\n        if (!data) {\r\n          Alert.alert(\"username Already exist\");\r\n          console.log(\"username Already exist\");\r\n          SetNewUser(prevState => ({\r\n            ...prevState,\r\n            'username': ''\r\n          }));\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const pickImage = async () => {\r\n    if (status) {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        base64: true,\r\n        allowsEditing: true,\r\n        aspect: [2, 2],\r\n        quality: 1,\r\n      });\r\n\r\n      if (!result.cancelled) {\r\n        // SetProfileTitle(result.title);\r\n        SetProfileTitle('wp5299018.jpg');\r\n        SetImages(result.uri);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      console.warn(\"Give Camera Access to use this feature\");\r\n      ImagePicker.requestMediaLibraryPermissionsAsync(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Login Title=\"Create Product\" loginUser={SignUpUser} Images={Images} navigation={props.navigation} ChooseImage={async () => pickImage()} >\r\n      <TextInput\r\n        placeholder=\"Name\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"name\"\r\n        keyboardType=\"default\"\r\n        textContentType=\"name\"\r\n        bind={Product.Name}\r\n        Value={Product.Name}\r\n        onChangeText={(e) => handleProduct('Name', e)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Quantity\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"number\"\r\n        keyboardType=\"number-pad\"\r\n        bind={Product.Quantity}\r\n        value={Product.Quantity}\r\n        onChangeText={(e) => handleProduct('Quantity', e.replace(/[^0-9]/g, ''))}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Price\"\r\n        placeholderTextColor=\"#808e9b\"\r\n        style={styles.input}\r\n        autoCorrect={true}\r\n        // autoCapitalize={false}\r\n        autoCompleteType=\"number\"\r\n        keyboardType=\"number-pad\"\r\n        bind={Product.Price}\r\n        value={Product.Price}\r\n        onChangeText={(e) => handleProduct('Price', e.replace(/[^0-9]/g, ''))}\r\n      />\r\n\r\n\r\n      <DropDownPicker\r\n        items={[\r\n          { label: 'UK', value: 'uk', icon: () => <Icon name=\"flag\" size={18} color=\"#900\" /> },\r\n          { label: 'France', value: 'france', icon: () => <Icon name=\"flag\" size={18} color=\"#900\" /> },\r\n        ]}\r\n        defaultValue={this.state.country}\r\n        containerStyle={{ height: 40 }}\r\n        style={{ backgroundColor: '#fafafa' }}\r\n        itemStyle={{\r\n          justifyContent: 'flex-start'\r\n        }}\r\n        dropDownStyle={{ backgroundColor: '#fafafa' }}\r\n        onChangeItem={item => console.log(item)}\r\n      />\r\n\r\n\r\n    </Login>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#333',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#808e9b',\r\n  },\r\n\r\n});\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}