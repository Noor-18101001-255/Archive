{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { FC, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Icon } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Dropdown = function Dropdown(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleDropdown = function toggleDropdown() {\n    setVisible(!visible);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {});\n  };\n\n  var renderDropdown = function renderDropdown() {\n    if (visible) {\n      return _jsx(FlatList, {\n        data: props.data,\n        keyExtractor: function keyExtractor(item, index) {\n          return index;\n        },\n        renderItem: renderItem\n      });\n    }\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: [props.style, styles.button],\n    onPress: toggleDropdown,\n    children: [renderDropdown(), _jsx(Text, {\n      style: styles.buttonText,\n      children: props.label\n    }), _jsx(Icon, {\n      type: \"font-awesome\",\n      name: \"chevron-down\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 50,\n    width: '90%',\n    paddingHorizontal: 10,\n    zIndex: 1,\n    alignSelf: 'center'\n  },\n  buttonText: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#808e9b'\n  },\n  dropdown: {\n    height: 60,\n    backgroundColor: '#333',\n    width: '60%',\n    marginVertical: '20%'\n  }\n});\nexport default Dropdown;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Components/Dropdown.js"],"names":["React","FC","useState","Icon","Dropdown","props","visible","setVisible","toggleDropdown","renderItem","item","renderDropdown","data","index","style","styles","button","buttonText","label","StyleSheet","create","flexDirection","alignItems","height","width","paddingHorizontal","zIndex","alignSelf","flex","textAlign","fontSize","fontWeight","color","dropdown","backgroundColor","marginVertical"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,EAAhB,EAAoBC,QAApB,QAAoC,OAApC;;;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;;;;AAGA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACC,KAAD,EAAW;AACzB,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,MAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAClB,KAAC,IAAD,KADkB;AAAA,GAAnB;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIL,OAAJ,EAAa;AACX,aACE,KAAC,QAAD;AACE,QAAA,IAAI,EAAED,KAAK,CAACO,IADd;AAEE,QAAA,YAAY,EAAE,sBAACF,IAAD,EAAMG,KAAN;AAAA,iBAAcA,KAAd;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAEJ;AAHd,QADF;AAQD;AACF,GAXD;;AAaA,SACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACJ,KAAK,CAACS,KAAP,EAAaC,MAAM,CAACC,MAApB,CADT;AAEE,IAAA,OAAO,EAAER,cAFX;AAAA,eAIGG,cAAc,EAJjB,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACE,UAApB;AAAA,gBAAiCZ,KAAK,CAACa;AAAvC,MALF,EAME,KAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,IAAI,EAAC;AAA/B,MANF;AAAA,IADF;AAUD,CAnCD;;AAqCA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,UAAU,EAAE,QAFN;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,KAAK,EAAE,KALD;AAMNC,IAAAA,iBAAiB,EAAE,EANb;AAONC,IAAAA,MAAM,EAAE,CAPF;AAQNC,IAAAA,SAAS,EAAC;AARJ,GADuB;AAY/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,QAAQ,EAAC,EAHC;AAIVC,IAAAA,UAAU,EAAC,MAJD;AAKVC,IAAAA,KAAK,EAAE;AALG,GAZmB;AAoB/BC,EAAAA,QAAQ,EAAE;AACRV,IAAAA,MAAM,EAAC,EADC;AAERW,IAAAA,eAAe,EAAE,MAFT;AAGRV,IAAAA,KAAK,EAAC,KAHE;AAIRW,IAAAA,cAAc,EAAC;AAJP;AApBqB,CAAlB,CAAf;AA+BA,eAAe/B,QAAf","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { StyleSheet,View, Text, TouchableOpacity,FlatList } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\n\r\n \r\nconst Dropdown =(props) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setVisible(!visible);\r\n  };\r\n  const renderItem = ({ item }) => (\r\n   <View>\r\n\r\n   </View>\r\n\r\n  );\r\n  const renderDropdown = () => {\r\n    if (visible) {\r\n      return (\r\n        <FlatList\r\n          data={props.data}\r\n          keyExtractor={(item,index)=>index}\r\n          renderItem={renderItem}\r\n        />\r\n        \r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[props.style,styles.button]}\r\n      onPress={toggleDropdown}\r\n    >\r\n      {renderDropdown()}\r\n      <Text style={styles.buttonText}>{props.label}</Text>\r\n      <Icon type='font-awesome' name='chevron-down'/>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#efefef',\r\n    height: 50,\r\n    width: '90%',\r\n    paddingHorizontal: 10,\r\n    zIndex: 1,\r\n    alignSelf:'center',\r\n\r\n  },\r\n  buttonText: {\r\n    flex: 1,\r\n    textAlign: 'center',\r\n    fontSize:16,\r\n    fontWeight:'bold',\r\n    color: '#808e9b'\r\n\r\n  },\r\n  dropdown: {\r\n    height:60,\r\n    backgroundColor: '#333',\r\n    width:'60%',\r\n    marginVertical:'20%',\r\n    \r\n\r\n    \r\n  },\r\n});\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}