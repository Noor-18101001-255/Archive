{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AppLoading from 'expo-app-loading';\nimport { AntDesign } from '@expo/vector-icons';\nimport { useFonts } from 'expo-font';\nimport User from \"../Models/User\";\nimport Constants from \"../Models/Constants\";\nimport Header from \"../Components/Header\";\nimport Dialog from \"../Components/Dialog\";\nimport GlobalMethods from \"../Models/GlobalMethods\";\nimport ListItem from \"../Components/ListItem\";\nimport Slider from \"../Components/Slider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Photos(_ref) {\n  var photos = _ref.photos;\n  var imgWidth = Dimensions.get('screen').width * 0.33333;\n  return _jsx(View, {\n    style: {},\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start'\n      },\n      children: photos.map(function (photo, index) {\n        return _jsx(View, {\n          children: _jsx(Image, {\n            style: {\n              width: imgWidth,\n              height: imgWidth\n            },\n            source: {\n              uri: \"https://picsum.photos/200/300?random=\" + (index + 1)\n            }\n          })\n        }, index);\n      })\n    })\n  });\n}\n\nfunction Albums(prop) {\n  var _this = this;\n\n  var _useState = useState(prop.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      albums = _useState2[0],\n      setAlbum = _useState2[1];\n\n  var imgWidth = Dimensions.get('screen').width * 0.33333;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff',\n      paddingBottom: 20\n    },\n    children: albums.map(function (album, albumIndex) {\n      return _jsxs(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: [album.images.map(function (img, imgIndex) {\n          return _jsx(TouchableOpacity, {\n            style: {\n              flexDirection: 'row',\n              marginTop: 10\n            },\n            onPress: OpenProduct.bind(_this, img.id),\n            children: _jsx(Image, {\n              style: {\n                width: imgWidth + 50,\n                height: imgWidth + 50\n              },\n              source: {\n                uri: img.image\n              }\n            })\n          }, imgIndex);\n        }), _jsx(View, {\n          style: {\n            position: 'absolute',\n            bottom: 10,\n            left: 10,\n            backgroundColor: '#111',\n            paddingHorizontal: 10,\n            paddingVertical: 4,\n            borderRadius: 6\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#fff',\n              fontFamily: 'SourceSansPro-Bold',\n              fontSize: 20\n            },\n            children: album.name\n          })\n        })]\n      }, albumIndex);\n    })\n  });\n}\n\nfunction Products(props) {\n  var OpenProduct = function OpenProduct(id) {\n    console.log(id + \" Selected\");\n    props.navigation.navigate('ProductScreen', {\n      productId: id\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: props.data,\n      keyExtractor: function keyExtractor(it, i) {\n        return i;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ListItem, {\n          ClickHandler: OpenProduct,\n          Item: item\n        });\n      }\n    })\n  });\n}\n\nexport default function Profile(props) {\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setuser = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ShowDialog = _useState8[0],\n      setShowDialog = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserBio = _useState10[0],\n      setUserBio = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userProducts = _useState12[0],\n      setUserProducts = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      CatProducts = _useState14[0],\n      setCatProducts = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userId = _useState16[0],\n      setUserId = _useState16[1];\n\n  useEffect(function () {\n    Object.values(userProducts).map(function (item) {\n      var images = [];\n      var name = '';\n      Object.values(item).map(function (child) {\n        setAllProducts(function (x) {\n          return [].concat(_toConsumableArray(x), [child]);\n        });\n        name = child.catagory.name;\n\n        if (child.picture.toString().startsWith('/Product')) {\n          images = [].concat(_toConsumableArray(images), [{\n            id: child.id,\n            image: 'http://fbdm.somee.com/' + child.picture\n          }]);\n        } else {\n          images = [].concat(_toConsumableArray(images), [{\n            id: child.id,\n            image: child.picture\n          }]);\n        }\n      });\n      var d = {\n        name: name,\n        images: images\n      };\n      setCatProducts(function (x) {\n        return [].concat(_toConsumableArray(x), [d]);\n      });\n    });\n  }, [userProducts]);\n\n  var _useFonts = useFonts({\n    SourceSansProLight: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Light.ttf\"),\n    SourceSansProRegular: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Regular.ttf\"),\n    SourceSansProBold: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var fetching = function fetching() {\n    var data, productdata;\n    return _regeneratorRuntime.async(function fetching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setUserId(props.route.params['UserId']);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(GlobalMethods.fetchUseById(props.route.params['UserId']));\n\n          case 3:\n            data = _context.sent;\n            setuser(data);\n            setUserBio(data.bio);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(GlobalMethods.GetProductsByCatagory(props.route.params['UserId']));\n\n          case 8:\n            productdata = _context.sent;\n            setUserProducts(productdata);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState17 = useState('Photos'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showContent = _useState18[0],\n      setShowContent = _useState18[1];\n\n  var EditUserBio = function EditUserBio() {\n    var data, options, res, resData;\n    return _regeneratorRuntime.async(function EditUserBio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(UserBio != null && UserBio !== '' && !(UserBio === user.userBio))) {\n              _context2.next = 18;\n              break;\n            }\n\n            console.log(user.userBio);\n            data = JSON.stringify({\n              username: user.username,\n              password: user.password,\n              bio: UserBio\n            });\n            options = {\n              method: 'POST',\n              body: data,\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\n              }\n            };\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(Constants.EditUserBio, options));\n\n          case 6:\n            res = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(res.text());\n\n          case 9:\n            resData = _context2.sent;\n\n            if (!(resData != 'Done')) {\n              _context2.next = 14;\n              break;\n            }\n\n            console.log(resData);\n            _context2.next = 16;\n            break;\n\n          case 14:\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(fetching());\n\n          case 16:\n            _context2.next = 19;\n            break;\n\n          case 18:\n            console.log('UserBio is null');\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GotoProducts = function GotoProducts() {\n    props.navigation.navigate('CreateProduct');\n  };\n\n  if (loading || !loaded) {\n    return _jsx(AppLoading, {\n      startAsync: fetching,\n      onFinish: function onFinish() {\n        return setLoading(false);\n      },\n      onError: console.warn\n    });\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff'\n    },\n    children: [_jsx(Header, {\n      title: user.username,\n      navigation: props.navigation,\n      CanGoBack: false\n    }), user && _jsx(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          children: _jsx(Image, {\n            style: styles.coverImage,\n            blurRadius: 5,\n            source: {\n              uri: user.picture\n            }\n          })\n        }), _jsxs(View, {\n          style: styles.profileContainer,\n          children: [_jsxs(View, {\n            children: [_jsx(View, {\n              style: styles.profileImageView,\n              children: _jsx(Image, {\n                style: styles.profileImage,\n                source: {\n                  uri: user.picture\n                }\n              })\n            }), _jsxs(View, {\n              style: styles.nameAndBioView,\n              children: [_jsx(Text, {\n                style: styles.userFullName,\n                children: user.firstName + \" \" + user.lastName\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  padding: 10,\n                  justifyContent: 'space-between'\n                },\n                children: [_jsx(Text, {\n                  style: styles.userBio,\n                  children: user.bio\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return setShowDialog(true);\n                  },\n                  children: _jsx(AntDesign, {\n                    name: \"edit\",\n                    size: 24,\n                    color: \"black\"\n                  })\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.countsView,\n              children: [_jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: allProducts.length\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Products\"\n                })]\n              }), _jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: \"1246\"\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Followers\"\n                })]\n              }), _jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: \"348\"\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Following\"\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.interactButtonsView,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.interactButton,\n                children: _jsx(Text, {\n                  style: styles.interactButtonText,\n                  children: \"Follow\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return props.navigation.navigate('CreateProduct', {\n                    userId: user.id\n                  });\n                },\n                style: styles.interactButton,\n                children: _jsx(Text, {\n                  style: styles.interactButtonText,\n                  children: \"Add Product\"\n                })\n              })]\n            }), _jsx(View, {\n              style: {\n                paddingHorizontal: 25,\n                marginTop: 10\n              },\n              children: _jsxs(Text, {\n                style: {\n                  fontFamily: 'SourceSansProRegular',\n                  fontSize: 16\n                },\n                children: ['Followed by ', _jsx(Text, {\n                  style: {\n                    fontFamily: 'SourceSansProBold'\n                  },\n                  children: \"john_doe \"\n                }), 'and ', _jsx(Text, {\n                  style: {\n                    fontFamily: 'SourceSansProBold'\n                  },\n                  children: \"19 others\"\n                })]\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginTop: 20\n            },\n            children: [_jsxs(View, {\n              style: styles.profileContentButtonsView,\n              children: [_jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Photos' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Photos');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Photos\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Albums' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Albums');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Albums\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Products' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Products');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Products\"\n                })\n              })]\n            }), allProducts.length > 0 ? showContent === 'Photos' ? _jsx(Photos, {\n              photos: new Array(13).fill(1)\n            }) : showContent === 'Albums' ? _jsx(Albums, {\n              navigation: props.navigation,\n              data: CatProducts\n            }) : _jsx(Products, {\n              navigation: props.navigation,\n              data: allProducts\n            }) : _jsx(Text, {\n              style: {\n                flex: 1,\n                justifyContent: 'center',\n                alignSelf: 'center',\n                height: 200,\n                color: '#8b8b8b'\n              },\n              children: \"No Product found\"\n            })]\n          })]\n        })]\n      })\n    }), _jsx(Dialog, {\n      visible: ShowDialog,\n      title: \"Edit Your Bio\",\n      onClose: function onClose() {\n        return setShowDialog(false);\n      },\n      OnSubmit: EditUserBio,\n      children: _jsx(TextInput, {\n        placeholder: \"Your Bio\",\n        placeholderTextColor: \"#808e9b\",\n        style: styles.input,\n        keyboardType: \"default\",\n        bind: UserBio,\n        value: UserBio,\n        onChangeText: function onChangeText(e) {\n          return setUserBio(e);\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/Profile.js"],"names":["React","useState","useEffect","AppLoading","AntDesign","useFonts","User","Constants","Header","Dialog","GlobalMethods","ListItem","Slider","Photos","photos","imgWidth","Dimensions","get","width","flexDirection","flexWrap","alignItems","map","photo","index","height","uri","Albums","prop","data","albums","setAlbum","flex","backgroundColor","paddingBottom","album","albumIndex","images","img","imgIndex","marginTop","OpenProduct","bind","id","image","position","bottom","left","paddingHorizontal","paddingVertical","borderRadius","color","fontFamily","fontSize","name","Products","props","console","log","navigation","navigate","productId","it","i","item","Profile","user","setuser","loading","setLoading","ShowDialog","setShowDialog","UserBio","setUserBio","userProducts","setUserProducts","CatProducts","setCatProducts","userId","setUserId","Object","values","child","setAllProducts","x","catagory","picture","toString","startsWith","d","SourceSansProLight","require","SourceSansProRegular","SourceSansProBold","loaded","fetching","route","params","fetchUseById","bio","GetProductsByCatagory","productdata","showContent","setShowContent","EditUserBio","userBio","JSON","stringify","username","password","options","method","body","headers","fetch","res","text","resData","GotoProducts","warn","styles","coverImage","profileContainer","profileImageView","profileImage","nameAndBioView","userFullName","firstName","lastName","padding","justifyContent","countsView","countView","countNum","allProducts","length","countText","interactButtonsView","interactButton","interactButtonText","profileContentButtonsView","showContentButton","borderBottomWidth","showContentButtonText","Array","fill","alignSelf","input","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Image,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n  TextInput,\r\n  FlatList,\r\n\r\n} from 'react-native';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n// Fonts\r\nimport { useFonts } from 'expo-font';\r\nimport User from '../Models/User';\r\nimport Constants from '../Models/Constants';\r\nimport Header from '../Components/Header';\r\nimport Dialog from '../Components/Dialog';\r\nimport GlobalMethods from '../Models/GlobalMethods';\r\nimport ListItem from '../Components/ListItem';\r\nimport Slider from '../Components/Slider';\r\n\r\nfunction Photos({ photos }) {\r\n\r\n  const imgWidth = Dimensions.get('screen').width * 0.33333;\r\n  return (\r\n    <View style={{}}>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'flex-start',\r\n        }}>\r\n        {photos.map((photo, index) => (\r\n          <View key={index}>\r\n            <Image\r\n              style={{ width: imgWidth, height: imgWidth }}\r\n              source={{\r\n                uri: `https://picsum.photos/200/300?random=${index + 1}`,\r\n              }}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Albums(prop) {\r\n  const [albums, setAlbum] = useState(prop.data);\r\n  // const OpenProduct = (id) => {\r\n  //   console.log(id + \" Selected\");\r\n  //   prop.navigation.navigate('ProductScreen', {\r\n  //     productId: id,\r\n  //   })\r\n  // }\r\n  const imgWidth = Dimensions.get('screen').width * 0.33333;\r\n  // alert(imgWidth);\r\n  return (\r\n\r\n    <View style={{ flex: 1, backgroundColor: '#fff', paddingBottom: 20 }}>\r\n      {albums.map((album, albumIndex) => (\r\n        <ScrollView key={albumIndex} horizontal showsHorizontalScrollIndicator={false}>\r\n          {album.images.map((img, imgIndex) => (\r\n            <TouchableOpacity key={imgIndex} style={{ flexDirection: 'row', marginTop: 10 }}\r\n              onPress={OpenProduct.bind(this, img.id)}\r\n            >\r\n              <Image\r\n                style={{ width: imgWidth + 50, height: imgWidth + 50 }}\r\n                source={{ uri: img.image }}\r\n              />\r\n              {/* {console.log(imgWidth)} */}\r\n            </TouchableOpacity>\r\n          ))}\r\n\r\n\r\n          <View\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: 10,\r\n              left: 10,\r\n              backgroundColor: '#111',\r\n              paddingHorizontal: 10,\r\n              paddingVertical: 4,\r\n              borderRadius: 6,\r\n            }}>\r\n            <Text style={{ color: '#fff', fontFamily: 'SourceSansPro-Bold', fontSize: 20 }}>\r\n              {album.name}\r\n            </Text>\r\n          </View>\r\n        </ScrollView>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Products(props) {\r\n  const OpenProduct = (id) => {\r\n    console.log(id + \" Selected\");\r\n    props.navigation.navigate('ProductScreen', {\r\n      productId: id,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(it, i) => i}\r\n        renderItem={(({ item }) => (\r\n\r\n          <ListItem ClickHandler={OpenProduct} Item={item} />\r\n        ))}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function Profile(props) {\r\n\r\n  const [user, setuser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [ShowDialog, setShowDialog] = useState(false);\r\n  const [UserBio, setUserBio] = useState('');\r\n  const [userProducts, setUserProducts] = useState([]);\r\n  const [CatProducts, setCatProducts] = useState([]);\r\n  //const [allProducts, setAllProducts] = useState([]);\r\n  const [userId, setUserId] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(userProducts);\r\n    Object.values(userProducts).map((item) => {\r\n      // console.log(item);\r\n      let images = [];\r\n      let name = '';\r\n      // item.map((child) => {\r\n      Object.values(item).map((child) => {\r\n        // console.log(child);\r\n        setAllProducts(x => [...x, child]);\r\n        name = child.catagory.name;\r\n        if (child.picture.toString().startsWith('/Product')) {\r\n          // console.log('product');\r\n          // images = [...images, { image: 'https://localhost:44330/' + child.picture }];\r\n          images = [...images, { id: child.id, image: 'http://fbdm.somee.com/' + child.picture }];\r\n        }\r\n        else {\r\n          // console.log('Non-product');\r\n          images = [...images, { id: child.id, image: child.picture }];\r\n        }\r\n      });\r\n      let d = { name, images: images };\r\n      // console.log(d)\r\n      setCatProducts(x => [...x, d]);\r\n    });\r\n  }, [userProducts]);\r\n\r\n  const [loaded] = useFonts({\r\n    SourceSansProLight: require('../assets/fonts/SourceSansPro/SourceSansPro-Light.ttf'),\r\n    SourceSansProRegular: require('../assets/fonts/SourceSansPro/SourceSansPro-Regular.ttf'),\r\n    SourceSansProBold: require('../assets/fonts/SourceSansPro/SourceSansPro-Bold.ttf'),\r\n  });\r\n  const fetching = async () => {\r\n    setUserId(props.route.params['UserId']);\r\n    let data = await GlobalMethods.fetchUseById(props.route.params['UserId']);\r\n    // data.picture = \"http://fbdm.somee.com/User/18875a4d-91fd-4b6c-a11b-343dd689f084.jpg\";\r\n    setuser(data);\r\n    // console.log(data);\r\n    setUserBio(data.bio);\r\n\r\n    let productdata = await GlobalMethods.GetProductsByCatagory(props.route.params['UserId']);\r\n    // console.log(productdata);\r\n    setUserProducts(productdata);\r\n    // let anObj = []\r\n    // let obj = productdata;\r\n\r\n  }\r\n\r\n  // React.useEffect(() => {\r\n  //       fetching();\r\n\r\n  // } ,[1]);\r\n  const [showContent, setShowContent] = useState('Photos');\r\n\r\n  const EditUserBio = async () => {\r\n    if (UserBio != null && UserBio !== '' && !(UserBio === user.userBio)) {\r\n\r\n      console.log(user.userBio);\r\n\r\n      let data = JSON.stringify({\r\n        username: user.username,\r\n        password: user.password,\r\n        bio: UserBio,\r\n\r\n      });\r\n\r\n\r\n      let options = {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: {\r\n          // Accept: 'application/json',\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5',\r\n        },\r\n      };\r\n      let res = await fetch(Constants.EditUserBio, options);\r\n      let resData = await res.text();\r\n      if (resData != 'Done')\r\n        console.log(resData);\r\n      else\r\n        await fetching();\r\n    }\r\n    else {\r\n      console.log('UserBio is null');\r\n    }\r\n  }\r\n\r\n\r\n  const GotoProducts = () => {\r\n    props.navigation.navigate('CreateProduct');\r\n  }\r\n  if (loading || !loaded) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={fetching}\r\n        onFinish={() => setLoading(false)}\r\n        onError={console.warn}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#fff' }}>\r\n      <Header title={user.username} navigation={props.navigation} CanGoBack={false} />\r\n\r\n      {user &&\r\n\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n\r\n          <>\r\n            <View>\r\n              <Image\r\n                style={styles.coverImage}\r\n                blurRadius={5}\r\n                // source={{ uri: 'https://picsum.photos/500/500?random=211' }}\r\n                source={{ uri: user.picture }}\r\n              />\r\n\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n              {/* Profile Details */}\r\n              <View>\r\n                {/* Profile Image */}\r\n                <View style={styles.profileImageView}>\r\n                  <Image\r\n                    style={styles.profileImage}\r\n                    source={{\r\n                      uri: user.picture,\r\n                    }}\r\n                  />\r\n                </View>\r\n                {/* Profile Name and Bio */}\r\n                <View style={styles.nameAndBioView}>\r\n                  <Text style={styles.userFullName}>{user.firstName + \" \" + user.lastName}</Text>\r\n                  <View style={{\r\n                    flexDirection: 'row', padding: 10,\r\n                    justifyContent: 'space-between'\r\n                  }}>\r\n\r\n                    <Text style={styles.userBio}>\r\n\r\n                      {user.bio}</Text>\r\n                    <TouchableOpacity onPress={() => setShowDialog(true)}>\r\n                      <AntDesign name=\"edit\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n                {/* Posts/Followers/Following View */}\r\n                <View style={styles.countsView}>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>{allProducts.length}</Text>\r\n                    <Text style={styles.countText}>Products</Text>\r\n                  </View>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>1246</Text>\r\n                    <Text style={styles.countText}>Followers</Text>\r\n                  </View>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>348</Text>\r\n                    <Text style={styles.countText}>Following</Text>\r\n                  </View>\r\n                </View>\r\n                {/* Interact Buttons View */}\r\n                <View style={styles.interactButtonsView}>\r\n                  <TouchableOpacity style={styles.interactButton}>\r\n                    <Text style={styles.interactButtonText}>Follow</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => props.navigation.navigate('CreateProduct', { userId: user.id })}\r\n                    style={styles.interactButton}>\r\n                    <Text\r\n                      style={styles.interactButtonText}>\r\n                      Add Product\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                {/* Mutual Followed By Text */}\r\n                <View style={{ paddingHorizontal: 25, marginTop: 10 }}>\r\n                  <Text style={{ fontFamily: 'SourceSansProRegular', fontSize: 16 }}>\r\n                    {'Followed by '}\r\n                    <Text style={{ fontFamily: 'SourceSansProBold' }}>john_doe </Text>\r\n                    {'and '}\r\n                    <Text style={{ fontFamily: 'SourceSansProBold' }}>19 others</Text>\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              {/* Profile Content */}\r\n              <View style={{ marginTop: 20 }}>\r\n                <View style={styles.profileContentButtonsView}>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: (showContent === 'Photos') ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Photos')}>\r\n                    <Text style={styles.showContentButtonText}>Photos</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: showContent === 'Albums' ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Albums')}>\r\n                    <Text style={styles.showContentButtonText}>Albums</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: showContent === 'Products' ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Products')}>\r\n                    <Text style={styles.showContentButtonText}>Products</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                {(allProducts.length > 0) ? showContent === 'Photos' ? (\r\n                  <Photos photos={new Array(13).fill(1)} />\r\n                ) : showContent === 'Albums' ? (\r\n                    <Albums navigation={props.navigation} data={CatProducts} />\r\n                ) : (\r\n                  <Products navigation={props.navigation} data={allProducts} />\r\n                ) :\r\n                  <Text style={{ flex: 1, justifyContent: 'center', alignSelf: 'center', height: 200, color: '#8b8b8b', }}>No Product found</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n          </>\r\n        </ScrollView>\r\n      }\r\n      <Dialog visible={ShowDialog} title=\"Edit Your Bio\" onClose={() => setShowDialog(false)} OnSubmit={EditUserBio}>\r\n        <TextInput\r\n          placeholder=\"Your Bio\"\r\n          placeholderTextColor=\"#808e9b\"\r\n          style={styles.input}\r\n\r\n          keyboardType=\"default\"\r\n          bind={UserBio}\r\n          value={UserBio}\r\n          onChangeText={(e) => setUserBio(e)}\r\n        />\r\n      </Dialog>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}