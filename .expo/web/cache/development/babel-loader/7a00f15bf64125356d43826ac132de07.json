{"ast":null,"code":"var _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Icon } from 'react-native-elements';\nimport Color from \"../Models/Color\";\nimport GlobalStyles from \"../Models/GlobalStyles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Login = function Login(props) {\n  var SignOrLogIn = props.Title === \"Login\" || props.Title === \"SignUp\" ? true : false;\n  var existingUser = false;\n\n  if (SignOrLogIn) {\n    var _existingUser = props.Title === \"Login\" ? false : false;\n\n    var _ImageUri = '';\n\n    if (!_existingUser) {\n      if (props.ProfilePic === null) _ImageUri = require(\"../assets/dummyAvatar.jpg\");else _ImageUri = props.ProfilePic;\n    }\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    style: GlobalStyles.statusbarMargin,\n    onPress: function onPress() {},\n    children: _jsxs(LinearGradient, {\n      colors: ['#222', '#222', '#111'],\n      style: styles.container,\n      children: [!existingUser && !SignOrLogIn && _jsxs(View, {\n        style: styles.loginTextContainer,\n        children: [_jsxs(Text, {\n          style: styles.welcomeText,\n          children: [props.Title, \"!\"]\n        }), _jsx(Text, {\n          style: styles.loginText,\n          children: \" \"\n        })]\n      }), existingUser && SignOrLogIn && _jsxs(View, {\n        style: styles.loginTextContainer,\n        children: [_jsx(Text, {\n          style: styles.welcomeText,\n          children: \"Welcome Back!\"\n        }), _jsx(Text, {\n          style: styles.loginText,\n          children: \"Login\"\n        })]\n      }), !existingUser && SignOrLogIn && _jsxs(View, {\n        style: styles.loginTextContainer,\n        children: [_jsx(Text, {\n          style: styles.welcomeText,\n          children: \"Welcome!\"\n        }), _jsxs(View, {\n          style: styles.ProfileView,\n          children: [_jsx(Text, {\n            style: styles.loginText,\n            children: \"Sign Up\"\n          }), _jsx(TouchableOpacity, {\n            onPress: props.ChooseImage.bind(_this),\n            children: _jsx(View, {\n              children: _jsx(View, {\n                style: styles.profileImageView,\n                children: _jsx(Image, {\n                  style: styles.profileImage,\n                  source: {\n                    uri: ImageUri\n                  }\n                })\n              })\n            })\n          })]\n        })]\n      }), props.children, !existingUser && SignOrLogIn && _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log('Coming Soon!');\n          Alert.alert('Coming Soon!', 'The Option Is not available yet');\n        },\n        children: _jsx(Text, {\n          style: [styles.fpText, {\n            alignSelf: 'flex-end'\n          }],\n          children: \"Forgot Password?\"\n        })\n      }), !existingUser && SignOrLogIn && _jsx(TouchableOpacity, {\n        onPress: props.ChooseImage,\n        children: _jsx(Text, {\n          style: [styles.fpText, {\n            alignSelf: 'flex-start',\n            marginVertical: 10,\n            fontWeight: 'bold'\n          }],\n          children: \"Choose profile image\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: props.loginUser.bind(_this),\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: props.Title\n        })\n      }), existingUser && SignOrLogIn && _jsxs(View, {\n        style: styles.signUpTextView,\n        children: [_jsx(Text, {\n          style: styles.signUpText,\n          children: \"Don't have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n            props.navigation.navigate('SignUpScreen');\n          },\n          children: _jsx(Text, {\n            style: [styles.signUpText, {\n              color: '#B53471'\n            }],\n            children: ' Sign Up'\n          })\n        })]\n      }), !existingUser && SignOrLogIn && _jsxs(View, {\n        style: styles.signUpTextView,\n        children: [_jsx(Text, {\n          style: styles.signUpText,\n          children: \"Already have a account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\n            props.navigation.navigate('LoginScreen');\n          },\n          children: _jsx(Text, {\n            style: [styles.signUpText, {\n              color: '#B53471'\n            }],\n            children: 'Login'\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 20\n  },\n  welcomeText: {\n    fontSize: 30,\n    fontWeight: '900',\n    color: '#fff',\n    alignSelf: 'center'\n  },\n  loginText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  fpText: {\n    color: '#B33771',\n    fontSize: 18,\n    fontWeight: '600',\n    marginTop: 10\n  },\n  loginButton: {\n    backgroundColor: '#833471',\n    paddingVertical: 12,\n    borderRadius: 6,\n    marginTop: 20\n  },\n  loginButtonText: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#fafafa',\n    alignSelf: 'center'\n  },\n  signUpTextView: {\n    marginTop: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  signUpText: {\n    color: '#808e9b',\n    fontSize: 20,\n    fontWeight: '500'\n  },\n  profileImageView: {\n    alignItems: 'center',\n    marginTop: 0\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 100,\n    borderWidth: 3,\n    borderColor: '#fff'\n  },\n  ProfileView: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Components/Login.js"],"names":["React","useEffect","useState","LinearGradient","Icon","Color","GlobalStyles","Login","props","SignOrLogIn","Title","existingUser","ImageUri","ProfilePic","require","statusbarMargin","styles","container","loginTextContainer","welcomeText","loginText","ProfileView","ChooseImage","bind","profileImageView","profileImage","uri","children","console","log","Alert","alert","fpText","alignSelf","marginVertical","fontWeight","loginButton","loginUser","loginButtonText","signUpTextView","signUpText","navigation","navigate","color","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","textAlign","marginTop","marginBottom","backgroundColor","paddingVertical","borderRadius","display","flexDirection","justifyContent","alignItems","width","height","borderWidth","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;;;AAcA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;;;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAEvB,MAAMC,WAAW,GAAGD,KAAK,CAACE,KAAN,KAAgB,OAAhB,IAA2BF,KAAK,CAACE,KAAN,KAAgB,QAA3C,GAAsD,IAAtD,GAA4D,KAAhF;AACA,MAAMC,YAAY,GAAG,KAArB;;AACA,MAAGF,WAAH,EAAe;AACb,QAAME,aAAY,GAAGH,KAAK,CAACE,KAAN,KAAgB,OAAhB,GAA0B,KAA1B,GAAkC,KAAvD;;AACA,QAAIE,SAAQ,GAAG,EAAf;;AACA,QAAI,CAACD,aAAL,EAAmB;AACjB,UAAIH,KAAK,CAACK,UAAN,KAAqB,IAAzB,EACED,SAAQ,GAAGE,OAAO,6BAAlB,CADF,KAGEF,SAAQ,GAAGJ,KAAK,CAACK,UAAjB;AAEH;AAEF;;AAED,SACE,KAAC,wBAAD;AAA0B,IAAA,KAAK,EAAEP,YAAY,CAACS,eAA9C;AACE,IAAA,OAAO,EAAE,mBAAM,CAEd,CAHH;AAAA,cAIE,MAAC,cAAD;AAEE,MAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAFV;AAGE,MAAA,KAAK,EAAEC,MAAM,CAACC,SAHhB;AAAA,iBAII,CAACN,YAAD,IAAiB,CAACF,WAAnB,IACC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACE,kBAApB;AAAA,mBAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA,qBAAkCX,KAAK,CAACE,KAAxC;AAAA,UAFF,EAGE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEM,MAAM,CAACI,SAApB;AAAA;AAAA,UAHF;AAAA,QALJ,EAWIT,YAAY,IAAIF,WAAjB,IACC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACE,kBAApB;AAAA,mBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA,UAFF,EAGE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA,UAHF;AAAA,QAZJ,EAmBI,CAACT,YAAD,IAAiBF,WAAlB,IACC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACE,kBAApB;AAAA,mBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA,UAFF,EAGE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACK,WAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACI,SAApB;AAAA;AAAA,YADF,EAEE,KAAC,gBAAD;AACA,YAAA,OAAO,EAAEZ,KAAK,CAACc,WAAN,CAAkBC,IAAlB,CAAuB,KAAvB,CADT;AAAA,sBAIE,KAAC,IAAD;AAAA,wBACE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEP,MAAM,CAACQ,gBAApB;AAAA,0BACE,KAAC,KAAD;AACE,kBAAA,KAAK,EAAER,MAAM,CAACS,YADhB;AAEE,kBAAA,MAAM,EAAE;AACNC,oBAAAA,GAAG,EAAEd;AADC;AAFV;AADF;AADF;AAJF,YAFF;AAAA,UAHF;AAAA,QApBJ,EA8CGJ,KAAK,CAACmB,QA9CT,EAiDI,CAAChB,YAAD,IAAiBF,WAAlB,IACC,KAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbmB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,UAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ,EAA4B,iCAA5B;AACD,SAJH;AAAA,kBAKE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACf,MAAM,CAACgB,MAAR,EAAgB;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAhB,CAAb;AAAA;AAAA;AALF,QAlDJ,EA2DI,CAACtB,YAAD,IAAiBF,WAAlB,IACC,KAAC,gBAAD;AACE,QAAA,OAAO,EAAED,KAAK,CAACc,WADjB;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACN,MAAM,CAACgB,MAAR,EAAgB;AAAEC,YAAAA,SAAS,EAAE,YAAb;AAA0BC,YAAAA,cAAc,EAAC,EAAzC;AAA4CC,YAAAA,UAAU,EAAC;AAAvD,WAAhB,CAAb;AAAA;AAAA;AAFF,QA5DJ,EAiEG,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEnB,MAAM,CAACoB,WAAhC;AAA6C,QAAA,OAAO,EAAE5B,KAAK,CAAC6B,SAAN,CAAgBd,IAAhB,CAAqB,KAArB,CAAtD;AAAA,kBACG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACsB,eAApB;AAAA,oBAAsC9B,KAAK,CAACE;AAA5C;AADH,QAjEH,EAsGIC,YAAY,IAAIF,WAAjB,IAEC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACuB,cAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACwB,UAApB;AAAA;AAAA,UADF,EAEE,KAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbV,YAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ,EAA4B,iCAA5B;AACAvB,YAAAA,KAAK,CAACiC,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B;AACD,WAJH;AAAA,oBAKE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAAC1B,MAAM,CAACwB,UAAR,EAAoB;AAAEG,cAAAA,KAAK,EAAE;AAAT,aAApB,CAAb;AAAA,sBACG;AADH;AALF,UAFF;AAAA,QAxGJ,EAqHI,CAAChC,YAAD,IAAiBF,WAAlB,IAEC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACuB,cAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACwB,UAApB;AAAA;AAAA,UADF,EAEE,KAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbV,YAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ,EAA4B,iCAA5B;AACAvB,YAAAA,KAAK,CAACiC,UAAN,CAAiBC,QAAjB,CAA0B,aAA1B;AACD,WAJH;AAAA,oBAKE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAAC1B,MAAM,CAACwB,UAAR,EAAoB;AAAEG,cAAAA,KAAK,EAAE;AAAT,aAApB,CAAb;AAAA,sBACG;AADH;AALF,UAFF;AAAA,QAvHJ;AAAA;AAJF,IADF;AA4ID,CA7JD;;AA+JA,IAAM3B,MAAM,GAAG4B,UAAU,CAACC,MAAX,CAAkB;AAC/B5B,EAAAA,SAAS,EAAE;AACT6B,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,iBAAiB,EAAE;AAHV,GADoB;AAM/B7B,EAAAA,WAAW,EAAE;AACX8B,IAAAA,QAAQ,EAAE,EADC;AAEXd,IAAAA,UAAU,EAAE,KAFD;AAGXQ,IAAAA,KAAK,EAAE,MAHI;AAIXV,IAAAA,SAAS,EAAE;AAJA,GANkB;AAa/Bb,EAAAA,SAAS,EAAE;AACT8B,IAAAA,SAAS,EAAE,QADF;AAETP,IAAAA,KAAK,EAAE,MAFE;AAGTM,IAAAA,QAAQ,EAAE,EAHD;AAITd,IAAAA,UAAU,EAAE,MAJH;AAKTgB,IAAAA,SAAS,EAAE,EALF;AAMTC,IAAAA,YAAY,EAAE;AANL,GAboB;AAsB/BpB,EAAAA,MAAM,EAAE;AAENW,IAAAA,KAAK,EAAE,SAFD;AAGNM,IAAAA,QAAQ,EAAE,EAHJ;AAINd,IAAAA,UAAU,EAAE,KAJN;AAKNgB,IAAAA,SAAS,EAAE;AALL,GAtBuB;AA6B/Bf,EAAAA,WAAW,EAAE;AACXiB,IAAAA,eAAe,EAAE,SADN;AAEXC,IAAAA,eAAe,EAAE,EAFN;AAGXC,IAAAA,YAAY,EAAE,CAHH;AAIXJ,IAAAA,SAAS,EAAE;AAJA,GA7BkB;AAmC/Bb,EAAAA,eAAe,EAAE;AACfW,IAAAA,QAAQ,EAAE,EADK;AAEfd,IAAAA,UAAU,EAAE,KAFG;AAGfQ,IAAAA,KAAK,EAAE,SAHQ;AAIfV,IAAAA,SAAS,EAAE;AAJI,GAnCc;AAqD/BM,EAAAA,cAAc,EAAE;AACdY,IAAAA,SAAS,EAAE,EADG;AAEdK,IAAAA,OAAO,EAAE,MAFK;AAGdC,IAAAA,aAAa,EAAE,KAHD;AAIdC,IAAAA,cAAc,EAAE;AAJF,GArDe;AA2D/BlB,EAAAA,UAAU,EAAE;AACVG,IAAAA,KAAK,EAAE,SADG;AAEVM,IAAAA,QAAQ,EAAE,EAFA;AAGVd,IAAAA,UAAU,EAAE;AAHF,GA3DmB;AAgE/BX,EAAAA,gBAAgB,EAAE;AAAEmC,IAAAA,UAAU,EAAE,QAAd;AAAwBR,IAAAA,SAAS,EAAE;AAAnC,GAhEa;AAiE/B1B,EAAAA,YAAY,EAAE;AACZmC,IAAAA,KAAK,EAAE,GADK;AAEZC,IAAAA,MAAM,EAAE,GAFI;AAGZN,IAAAA,YAAY,EAAE,GAHF;AAIZO,IAAAA,WAAW,EAAE,CAJD;AAKZC,IAAAA,WAAW,EAAE;AALD,GAjEiB;AAwE/B1C,EAAAA,WAAW,EAAE;AACXoC,IAAAA,aAAa,EAAE,KADJ;AAEXE,IAAAA,UAAU,EAAE,QAFD;AAGXD,IAAAA,cAAc,EAAE;AAHL;AAxEkB,CAAlB,CAAf;AA+EA,eAAenD,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  StatusBar,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Image,\r\n  Touchable,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Icon } from 'react-native-elements';\r\nimport Color from '../Models/Color'\r\nimport GlobalStyles from '../Models/GlobalStyles';\r\n// import Color from '../assets/dummyAvatar.jpg'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  const SignOrLogIn = props.Title === \"Login\" || props.Title === \"SignUp\" ? true :false;\r\n  const existingUser = false;\r\n  if(SignOrLogIn){\r\n    const existingUser = props.Title === \"Login\" ? false : false;\r\n    let ImageUri = '';\r\n    if (!existingUser) {\r\n      if (props.ProfilePic === null)\r\n        ImageUri = require('../assets/dummyAvatar.jpg');\r\n      else\r\n        ImageUri = props.ProfilePic;\r\n  \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback style={GlobalStyles.statusbarMargin}\r\n      onPress={() => {\r\n        // Keyboard.dismiss();\r\n      }}>\r\n      <LinearGradient\r\n        //colors={['#222', '#222', '#111']}\r\n        colors={['#222', '#222', '#111']}\r\n        style={styles.container}>\r\n        {(!existingUser && !SignOrLogIn) &&\r\n          <View style={styles.loginTextContainer}>\r\n\r\n            <Text style={styles.welcomeText}>{props.Title}!</Text>\r\n            <Text style={styles.loginText}> </Text>\r\n          </View>\r\n        }\r\n        {(existingUser && SignOrLogIn) &&\r\n          <View style={styles.loginTextContainer}>\r\n\r\n            <Text style={styles.welcomeText}>Welcome Back!</Text>\r\n            <Text style={styles.loginText}>Login</Text>\r\n          </View>\r\n        }\r\n\r\n        {(!existingUser && SignOrLogIn) &&\r\n          <View style={styles.loginTextContainer}>\r\n\r\n            <Text style={styles.welcomeText}>Welcome!</Text>\r\n            <View style={styles.ProfileView}>\r\n              <Text style={styles.loginText}>Sign Up</Text>\r\n              <TouchableOpacity\r\n              onPress={props.ChooseImage.bind(this)}\r\n              >\r\n\r\n                <View>\r\n                  <View style={styles.profileImageView}>\r\n                    <Image\r\n                      style={styles.profileImage}\r\n                      source={{\r\n                        uri: ImageUri,\r\n                      }}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n          </View>\r\n        }\r\n\r\n\r\n        {props.children}\r\n\r\n\r\n        {(!existingUser && SignOrLogIn) &&\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              console.log('Coming Soon!');\r\n              Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n            }}>\r\n            <Text style={[styles.fpText, { alignSelf: 'flex-end', }]}>Forgot Password?</Text>\r\n          </TouchableOpacity>\r\n        }\r\n\r\n        {(!existingUser && SignOrLogIn) &&\r\n          <TouchableOpacity\r\n            onPress={props.ChooseImage}>\r\n            <Text style={[styles.fpText, { alignSelf: 'flex-start',marginVertical:10,fontWeight:'bold' }]}>Choose profile image</Text>\r\n          </TouchableOpacity>\r\n        }\r\n         <TouchableOpacity style={styles.loginButton} onPress={props.loginUser.bind(this)}>\r\n            <Text style={styles.loginButtonText}>{props.Title}</Text>\r\n          </TouchableOpacity>\r\n\r\n         \r\n\r\n        {/* <View style={styles.loginWithBar}>\r\n        <TouchableOpacity\r\n          style={styles.iconButton}\r\n          onPress={() => {\r\n            console.log('Coming Soon!');\r\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n          }}>\r\n          <Icon name=\"google\" type=\"font-awesome\" size={30} color=\"#808e9b\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.iconButton}\r\n          onPress={() => {\r\n            console.log('Coming Soon!');\r\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n          }}>\r\n          <Icon\r\n            name=\"facebook-square\"\r\n            type=\"font-awesome\"\r\n            size={30}\r\n            color=\"#808e9b\"\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.iconButton}\r\n          onPress={() => {\r\n            Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n          }}>\r\n          <Icon name=\"apple\" type=\"font-awesome\" size={30} color=\"#808e9b\" />\r\n        </TouchableOpacity>\r\n      </View> */}\r\n\r\n        {(existingUser && SignOrLogIn) &&\r\n\r\n          <View style={styles.signUpTextView}>\r\n            <Text style={styles.signUpText}>Don't have an account?</Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n                props.navigation.navigate('SignUpScreen');\r\n              }}>\r\n              <Text style={[styles.signUpText, { color: '#B53471' }]}>\r\n                {' Sign Up'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        }\r\n        {(!existingUser && SignOrLogIn) &&\r\n\r\n          <View style={styles.signUpTextView}>\r\n            <Text style={styles.signUpText}>Already have a account?</Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                Alert.alert('Coming Soon!', 'The Option Is not available yet');\r\n                props.navigation.navigate('LoginScreen');\r\n              }}>\r\n              <Text style={[styles.signUpText, { color: '#B53471' }]}>\r\n                {'Login'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        }\r\n      </LinearGradient>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 50,\r\n    paddingHorizontal: 20,\r\n  },\r\n  welcomeText: {\r\n    fontSize: 30,\r\n    fontWeight: '900',\r\n    color: '#fff',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  loginText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  fpText: {\r\n\r\n    color: '#B33771',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#833471',\r\n    paddingVertical: 12,\r\n    borderRadius: 6,\r\n    marginTop: 20,\r\n  },\r\n  loginButtonText: {\r\n    fontSize: 20,\r\n    fontWeight: '500',\r\n    color: '#fafafa',\r\n    alignSelf: 'center',\r\n  },\r\n  // loginWithBar: {\r\n  //   display: 'flex',\r\n  //   flexDirection: 'row',\r\n  //   justifyContent: 'center',\r\n  //   marginTop: 50,\r\n  // },\r\n  // iconButton: {\r\n  //   backgroundColor: '#333',\r\n  //   padding: 14,\r\n  //   marginHorizontal: 10,\r\n  //   borderRadius: 100,\r\n  // },\r\n  signUpTextView: {\r\n    marginTop: 40,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  signUpText: {\r\n    color: '#808e9b',\r\n    fontSize: 20,\r\n    fontWeight: '500',\r\n  },\r\n  profileImageView: { alignItems: 'center', marginTop: 0 },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100,\r\n    borderWidth: 3,\r\n    borderColor: '#fff',\r\n  },\r\n  ProfileView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}