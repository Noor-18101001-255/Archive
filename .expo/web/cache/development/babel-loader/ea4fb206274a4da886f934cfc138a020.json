{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { FC, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Dropdown = function Dropdown(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleDropdown = function toggleDropdown() {\n    setVisible(!visible);\n  };\n\n  var renderDropdown = function renderDropdown() {\n    if (visible) {\n      return _jsx(Text, {\n        style: styles.dropdown,\n        children: \"This is where the dropdown will be rendered.\"\n      });\n    }\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.button,\n    onPress: toggleDropdown,\n    children: [renderDropdown(), _jsx(Text, {\n      style: styles.buttonText,\n      children: props.label\n    }), _jsx(Icon, {\n      type: \"font-awesome\",\n      name: \"chevron-down\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#efefef',\n    height: 50,\n    width: '90%',\n    paddingHorizontal: 10,\n    zIndex: 1\n  },\n  buttonText: {\n    flex: 1,\n    textAlign: 'center'\n  },\n  dropdown: {\n    position: 'absolute',\n    backgroundColor: '',\n    top: 50,\n    height: 60\n  }\n});\nexport default Dropdown;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Components/Dropdown.js"],"names":["React","FC","useState","Icon","Dropdown","props","visible","setVisible","toggleDropdown","renderDropdown","styles","dropdown","button","buttonText","label","StyleSheet","create","flexDirection","alignItems","backgroundColor","height","width","paddingHorizontal","zIndex","flex","textAlign","position","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,EAAhB,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;;;;AAGA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACC,KAAD,EAAW;AACzB,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIH,OAAJ,EAAa;AACX,aACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,QAApB;AAAA;AAAA,QADJ;AAKD;AACF,GARD;;AAUA,SACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,MADhB;AAEE,IAAA,OAAO,EAAEJ,cAFX;AAAA,eAIGC,cAAc,EAJjB,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACG,UAApB;AAAA,gBAAiCR,KAAK,CAACS;AAAvC,MALF,EAME,KAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,IAAI,EAAC;AAA/B,MANF;AAAA,IADF;AAUD,CA3BD;;AA6BA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,KAAK,EAAE,KALD;AAMNC,IAAAA,iBAAiB,EAAE,EANb;AAONC,IAAAA,MAAM,EAAE;AAPF,GADuB;AAU/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,SAAS,EAAE;AAFD,GAVmB;AAc/Bd,EAAAA,QAAQ,EAAE;AACRe,IAAAA,QAAQ,EAAE,UADF;AAERP,IAAAA,eAAe,EAAE,EAFT;AAGRQ,IAAAA,GAAG,EAAE,EAHG;AAIRP,IAAAA,MAAM,EAAC;AAJC;AAdqB,CAAlB,CAAf;AAsBA,eAAehB,QAAf","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\n\r\n \r\nconst Dropdown =(props) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const renderDropdown = () => {\r\n    if (visible) {\r\n      return (\r\n          <Text style={styles.dropdown}>\r\n            This is where the dropdown will be rendered.\r\n          </Text>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.button}\r\n      onPress={toggleDropdown}\r\n    >\r\n      {renderDropdown()}\r\n      <Text style={styles.buttonText}>{props.label}</Text>\r\n      <Icon type='font-awesome' name='chevron-down'/>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#efefef',\r\n    height: 50,\r\n    width: '90%',\r\n    paddingHorizontal: 10,\r\n    zIndex: 1,\r\n  },\r\n  buttonText: {\r\n    flex: 1,\r\n    textAlign: 'center',\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    backgroundColor: '',\r\n    top: 50,\r\n    height:60\r\n  },\r\n});\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}