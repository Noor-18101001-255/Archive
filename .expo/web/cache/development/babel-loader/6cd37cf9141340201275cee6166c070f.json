{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AppLoading from 'expo-app-loading';\nimport { AntDesign } from '@expo/vector-icons';\nimport { useFonts } from 'expo-font';\nimport User from \"../Models/User\";\nimport Constants from \"../Models/Constants\";\nimport Header from \"../Components/Header\";\nimport Dialog from \"../Components/Dialog\";\nimport GlobalMethods from \"../Models/GlobalMethods\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Photos(_ref) {\n  var photos = _ref.photos;\n  var imgWidth = Dimensions.get('screen').width * 0.33333;\n  return _jsx(View, {\n    style: {},\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start'\n      },\n      children: photos.map(function (photo, index) {\n        return _jsx(View, {\n          children: _jsx(Image, {\n            style: {\n              width: imgWidth,\n              height: imgWidth\n            },\n            source: {\n              uri: \"https://picsum.photos/200/300?random=\" + (index + 1)\n            }\n          })\n        }, index);\n      })\n    })\n  });\n}\n\nfunction Albums(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      albums = _useState2[0],\n      setAlbum = _useState2[1];\n\n  var name = '';\n  var images = [];\n  var obj = props.data;\n  var imgWidth = Dimensions.get('screen').width * 0.33333;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff',\n      paddingBottom: 20\n    },\n    children: albums.map(function (album, albumIndex) {\n      return _jsxs(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        children: [album.images.map(function (img, imgIndex) {\n          return _jsx(TouchableWithoutFeedback, {\n            style: {\n              flexDirection: 'row',\n              marginTop: 10\n            },\n            onPress: prop.ProductHanler,\n            children: _jsx(Image, {\n              style: {\n                width: imgWidth + 50,\n                height: imgWidth + 50\n              },\n              source: {\n                uri: img\n              }\n            })\n          }, imgIndex);\n        }), _jsx(View, {\n          style: {\n            position: 'absolute',\n            bottom: 10,\n            left: 10,\n            backgroundColor: '#111',\n            paddingHorizontal: 10,\n            paddingVertical: 4,\n            borderRadius: 6\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#fff',\n              fontFamily: 'SourceSansPro-Bold',\n              fontSize: 20\n            },\n            children: album.name\n          })\n        })]\n      }, albumIndex);\n    })\n  });\n}\n\nfunction Tags(_ref2) {\n  var photos = _ref2.photos;\n  var imgWidth = Dimensions.get('screen').width * 0.33333;\n  return _jsx(View, {\n    style: {},\n    children: _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start'\n      },\n      children: photos.map(function (photo, index) {\n        return _jsx(View, {\n          children: _jsx(Image, {\n            style: {\n              width: imgWidth,\n              height: imgWidth\n            },\n            source: {\n              uri: \"https://picsum.photos/200/300?random=\" + (index + 100)\n            }\n          })\n        }, index);\n      })\n    })\n  });\n}\n\nexport default function Profile(props) {\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setuser = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ShowDialog = _useState8[0],\n      setShowDialog = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserBio = _useState10[0],\n      setUserBio = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userProducts = _useState12[0],\n      setUserProducts = _useState12[1];\n\n  useEffect(function () {\n    console.log(userProducts);\n    userProducts.map(function (item) {\n      console.logI(item);\n    });\n  }, [userProducts]);\n\n  var _useFonts = useFonts({\n    SourceSansProLight: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Light.ttf\"),\n    SourceSansProRegular: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Regular.ttf\"),\n    SourceSansProBold: require(\"../assets/fonts/SourceSansPro/SourceSansPro-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var fetching = function fetching() {\n    var data, productdata;\n    return _regeneratorRuntime.async(function fetching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(GlobalMethods.fetchUseById(\"18875a4d-91fd-4b6c-a11b-343dd689f084\"));\n\n          case 2:\n            data = _context.sent;\n            setuser(data);\n            console.log(data);\n            setUserBio(data.bio);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(GlobalMethods.GetProductsByCatagory());\n\n          case 8:\n            productdata = _context.sent;\n            setUserProducts(productdata);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState13 = useState('Photos'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showContent = _useState14[0],\n      setShowContent = _useState14[1];\n\n  var EditUserBio = function EditUserBio() {\n    var data, options, res, resData;\n    return _regeneratorRuntime.async(function EditUserBio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(UserBio != null && UserBio != '')) {\n              _context2.next = 18;\n              break;\n            }\n\n            console.log(UserBio);\n            data = JSON.stringify({\n              username: user.username,\n              password: user.password,\n              bio: UserBio\n            });\n            options = {\n              method: 'POST',\n              body: data,\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5'\n              }\n            };\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(Constants.EditUserBio, options));\n\n          case 6:\n            res = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(res.text());\n\n          case 9:\n            resData = _context2.sent;\n\n            if (!(resData != 'Done')) {\n              _context2.next = 14;\n              break;\n            }\n\n            console.log(resData);\n            _context2.next = 16;\n            break;\n\n          case 14:\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(fetching());\n\n          case 16:\n            _context2.next = 19;\n            break;\n\n          case 18:\n            console.log('UserBio is null');\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GotoProducts = function GotoProducts() {\n    props.navigation.navigate('CreateProduct');\n  };\n\n  if (loading || !loaded) {\n    return _jsx(AppLoading, {\n      startAsync: fetching,\n      onFinish: function onFinish() {\n        return setLoading(false);\n      },\n      onError: console.warn\n    });\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff'\n    },\n    children: [_jsx(Header, {\n      title: user.username,\n      CanGoBack: false\n    }), loading && _jsx(View, {\n      children: _jsx(Text, {\n        children: \"profile\"\n      })\n    }), user && _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(_Fragment, {\n        children: [_jsx(View, {\n          children: _jsx(Image, {\n            style: styles.coverImage,\n            blurRadius: 5,\n            source: {\n              uri: 'https://randomuser.me/api/portraits/women/46.jpg'\n            }\n          })\n        }), _jsxs(View, {\n          style: styles.profileContainer,\n          children: [_jsxs(View, {\n            children: [_jsx(View, {\n              style: styles.profileImageView,\n              children: _jsx(Image, {\n                style: styles.profileImage,\n                source: {\n                  uri: 'https://randomuser.me/api/portraits/women/46.jpg'\n                }\n              })\n            }), _jsxs(View, {\n              style: styles.nameAndBioView,\n              children: [_jsx(Text, {\n                style: styles.userFullName,\n                children: user.firstName + \" \" + user.lastName\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  padding: 10,\n                  justifyContent: 'space-between'\n                },\n                children: [_jsx(Text, {\n                  style: styles.userBio,\n                  children: user.bio\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return setShowDialog(true);\n                  },\n                  children: _jsx(AntDesign, {\n                    name: \"edit\",\n                    size: 24,\n                    color: \"black\"\n                  })\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.countsView,\n              children: [_jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: \"13\"\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Posts\"\n                })]\n              }), _jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: \"1246\"\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Followers\"\n                })]\n              }), _jsxs(View, {\n                style: styles.countView,\n                children: [_jsx(Text, {\n                  style: styles.countNum,\n                  children: \"348\"\n                }), _jsx(Text, {\n                  style: styles.countText,\n                  children: \"Following\"\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.interactButtonsView,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.interactButton,\n                children: _jsx(Text, {\n                  style: styles.interactButtonText,\n                  children: \"Follow\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return props.navigation.navigate('CreateProduct', {\n                    userId: user.id\n                  });\n                },\n                style: styles.interactButton,\n                children: _jsx(Text, {\n                  style: styles.interactButtonText,\n                  children: \"Products\"\n                })\n              })]\n            }), _jsx(View, {\n              style: {\n                paddingHorizontal: 25,\n                marginTop: 10\n              },\n              children: _jsxs(Text, {\n                style: {\n                  fontFamily: 'SourceSansProRegular',\n                  fontSize: 16\n                },\n                children: ['Followed by ', _jsx(Text, {\n                  style: {\n                    fontFamily: 'SourceSansProBold'\n                  },\n                  children: \"john_doe \"\n                }), 'and ', _jsx(Text, {\n                  style: {\n                    fontFamily: 'SourceSansProBold'\n                  },\n                  children: \"19 others\"\n                })]\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginTop: 20\n            },\n            children: [_jsxs(View, {\n              style: styles.profileContentButtonsView,\n              children: [_jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Photos' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Photos');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Photos\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Albums' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Albums');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Albums\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: _objectSpread(_objectSpread({}, styles.showContentButton), {}, {\n                  borderBottomWidth: showContent === 'Tags' ? 2 : 0\n                }),\n                onPress: function onPress() {\n                  return setShowContent('Tags');\n                },\n                children: _jsx(Text, {\n                  style: styles.showContentButtonText,\n                  children: \"Tags\"\n                })\n              })]\n            }), showContent === 'Photos' ? _jsx(Photos, {\n              photos: new Array(13).fill(1)\n            }) : showContent === 'Albums' ? _jsx(Albums, {\n              data: userProducts,\n              ProductHanler: GotoProducts\n            }) : _jsx(Tags, {\n              photos: new Array(23).fill(1)\n            })]\n          })]\n        })]\n      }), _jsx(Dialog, {\n        visible: ShowDialog,\n        title: \"Edit Your Bio\",\n        onClose: function onClose() {\n          return setShowDialog(false);\n        },\n        OnSubmit: EditUserBio,\n        children: _jsx(TextInput, {\n          placeholder: \"Your Bio\",\n          placeholderTextColor: \"#808e9b\",\n          style: styles.input,\n          keyboardType: \"default\",\n          bind: UserBio,\n          value: UserBio,\n          onChangeText: function onChangeText(e) {\n            return setUserBio(e);\n          }\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  coverImage: {\n    height: 300,\n    width: '100%'\n  },\n  profileContainer: {\n    backgroundColor: '#fff',\n    marginTop: -100,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  },\n  profileImageView: {\n    alignItems: 'center',\n    marginTop: -50\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 100,\n    borderWidth: 3,\n    borderColor: '#fff'\n  },\n  nameAndBioView: {\n    alignItems: 'center',\n    marginTop: 10\n  },\n  userFullName: {\n    fontFamily: 'SourceSansProBold',\n    fontSize: 26\n  },\n  userBio: {\n    fontFamily: 'SourceSansProRegular',\n    fontSize: 18,\n    color: '#333',\n    marginTop: 4\n  },\n  countsView: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  countView: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  countNum: {\n    fontFamily: 'SourceSansProBold',\n    fontSize: 20\n  },\n  countText: {\n    fontFamily: 'SourceSansProRegular',\n    fontSize: 18,\n    color: '#333'\n  },\n  interactButtonsView: {\n    flexDirection: 'row',\n    marginTop: 10,\n    paddingHorizontal: 20\n  },\n  interactButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4b7bec',\n    margin: 5,\n    borderRadius: 4\n  },\n  interactButtonText: {\n    fontFamily: 'Bold',\n    color: '#fff',\n    fontSize: 18,\n    paddingVertical: 6\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#e9e9e9',\n    borderRadius: 6,\n    marginTop: 10,\n    outlineStyle: 'none',\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#333333'\n  },\n  profileContentButtonsView: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 60,\n    borderTopWidth: 2,\n    borderTopColor: '#f1f3f6'\n  },\n  showContentButton: {\n    flex: 1,\n    alignItems: 'center',\n    paddingVertical: 10,\n    borderBottomColor: '#000'\n  },\n  showContentButtonText: {\n    fontSize: 18,\n    fontFamily: 'SourceSansProBold'\n  }\n});","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/Profile.js"],"names":["React","useState","useEffect","AppLoading","AntDesign","useFonts","User","Constants","Header","Dialog","GlobalMethods","Photos","photos","imgWidth","Dimensions","get","width","flexDirection","flexWrap","alignItems","map","photo","index","height","uri","Albums","props","albums","setAlbum","name","images","obj","data","flex","backgroundColor","paddingBottom","album","albumIndex","img","imgIndex","marginTop","prop","ProductHanler","position","bottom","left","paddingHorizontal","paddingVertical","borderRadius","color","fontFamily","fontSize","Tags","Profile","user","setuser","loading","setLoading","ShowDialog","setShowDialog","UserBio","setUserBio","userProducts","setUserProducts","console","log","item","logI","SourceSansProLight","require","SourceSansProRegular","SourceSansProBold","loaded","fetching","fetchUseById","bio","GetProductsByCatagory","productdata","showContent","setShowContent","EditUserBio","JSON","stringify","username","password","options","method","body","headers","fetch","res","text","resData","GotoProducts","navigation","navigate","warn","styles","coverImage","profileContainer","profileImageView","profileImage","nameAndBioView","userFullName","firstName","lastName","padding","justifyContent","userBio","countsView","countView","countNum","countText","interactButtonsView","interactButton","interactButtonText","userId","id","profileContentButtonsView","showContentButton","borderBottomWidth","showContentButtonText","Array","fill","input","e","StyleSheet","create","borderTopLeftRadius","borderTopRightRadius","borderWidth","borderColor","alignContent","margin","outlineStyle","borderTopWidth","borderTopColor","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Image,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n  TextInput,\r\n\r\n} from 'react-native';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n// Fonts\r\nimport { useFonts } from 'expo-font';\r\nimport User from '../Models/User';\r\nimport Constants from '../Models/Constants';\r\nimport Header from '../Components/Header';\r\nimport Dialog from '../Components/Dialog';\r\nimport GlobalMethods from '../Models/GlobalMethods';\r\n\r\nfunction Photos({ photos }) {\r\n  const imgWidth = Dimensions.get('screen').width * 0.33333;\r\n  return (\r\n    <View style={{}}>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'flex-start',\r\n        }}>\r\n        {photos.map((photo, index) => (\r\n          <View key={index}>\r\n            <Image\r\n              style={{ width: imgWidth, height: imgWidth }}\r\n              source={{\r\n                uri: `https://picsum.photos/200/300?random=${index + 1}`,\r\n              }}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Albums(props) {\r\n  const [albums, setAlbum] = useState([]);\r\n  let name = '';\r\n  let images = [];\r\n  let obj = props.data;\r\n  // console.log( obj);\r\n  // useEffect(() => {\r\n  //   for (var i = 0; i < obj.length; i++) {\r\n  //     let tempObj = obj[i]\r\n  //     name = tempObj.catagory['name'];\r\n  //     console.log(tempObj['id']);\r\n  //     for (var j = 0; j < props.data[i]; j++) {\r\n  //       images = [...images, { image: props.data[i].picture }]\r\n  //     }\r\n  //     let d = { name: name, images: images };\r\n  //     console.log(d);\r\n  //     setAlbum(p => [...p, d]);\r\n  //     name = '';\r\n  //     images = [];\r\n  //   }\r\n  // });\r\n  const imgWidth = Dimensions.get('screen').width * 0.33333;\r\n  return (\r\n\r\n    <View style={{ flex: 1, backgroundColor: '#fff', paddingBottom: 20 }}>\r\n      {albums.map((album, albumIndex) => (\r\n        <ScrollView key={albumIndex} horizontal showsHorizontalScrollIndicator={false}>\r\n          {album.images.map((img, imgIndex) => (\r\n            <TouchableWithoutFeedback key={imgIndex} style={{ flexDirection: 'row', marginTop: 10 }}\r\n              onPress={prop.ProductHanler}\r\n            >\r\n              <Image\r\n                style={{ width: imgWidth + 50, height: imgWidth + 50 }}\r\n                source={{ uri: img }}\r\n              />\r\n            </TouchableWithoutFeedback>\r\n          ))}\r\n\r\n\r\n          <View\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: 10,\r\n              left: 10,\r\n              backgroundColor: '#111',\r\n              paddingHorizontal: 10,\r\n              paddingVertical: 4,\r\n              borderRadius: 6,\r\n            }}>\r\n            <Text style={{ color: '#fff', fontFamily: 'SourceSansPro-Bold', fontSize: 20 }}>\r\n              {album.name}\r\n            </Text>\r\n          </View>\r\n        </ScrollView>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Tags({ photos }) {\r\n  const imgWidth = Dimensions.get('screen').width * 0.33333;\r\n  return (\r\n    <View style={{}}>\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'flex-start',\r\n        }}>\r\n        {photos.map((photo, index) => (\r\n          <View key={index}>\r\n            <Image\r\n              style={{ width: imgWidth, height: imgWidth }}\r\n              source={{\r\n                uri: `https://picsum.photos/200/300?random=${index + 100}`,\r\n              }}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function Profile(props) {\r\n\r\n  const [user, setuser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [ShowDialog, setShowDialog] = useState(false);\r\n  const [UserBio, setUserBio] = useState('');\r\n  const [userProducts, setUserProducts] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(userProducts);\r\n    userProducts.map((item)=>{\r\n        console.logI(item)\r\n    });\r\n\r\n    // for (var i = 0; i < obj.length; i++) {\r\n    //   let tempObj = obj[i]\r\n    //   let name = tempObj.catagory['name'];\r\n    //   let images = [];\r\n    //   for (var j = 0; j < props.data[i]; j++) {\r\n    //     images = [...images, { image: props.data[i].picture }]\r\n    //   }\r\n    //   let d = { name: name, images: images };\r\n    //   console.log(d);\r\n    //   anObj = [...anObj, d];\r\n    //   name = '';\r\n    //   images = [];\r\n    // }\r\n\r\n}, [userProducts]);\r\n  const [loaded] = useFonts({\r\n    SourceSansProLight: require('../assets/fonts/SourceSansPro/SourceSansPro-Light.ttf'),\r\n    SourceSansProRegular: require('../assets/fonts/SourceSansPro/SourceSansPro-Regular.ttf'),\r\n    SourceSansProBold: require('../assets/fonts/SourceSansPro/SourceSansPro-Bold.ttf'),\r\n  });\r\n  const fetching = async () => {\r\n    let data = await GlobalMethods.fetchUseById(\"18875a4d-91fd-4b6c-a11b-343dd689f084\");\r\n\r\n    setuser(data);\r\n    console.log(data);\r\n    setUserBio(data.bio);\r\n\r\n    let productdata = await GlobalMethods.GetProductsByCatagory();\r\n\r\n    setUserProducts(productdata);\r\n    // let anObj = []\r\n    // let obj = productdata;\r\n   \r\n  }\r\n\r\n  // React.useEffect(() => {\r\n  //       fetching();\r\n\r\n  // } ,[1]);\r\n  const [showContent, setShowContent] = useState('Photos');\r\n\r\n  const EditUserBio = async () => {\r\n    if (UserBio != null && UserBio != '') {\r\n\r\n      console.log(UserBio);\r\n\r\n      let data = JSON.stringify({\r\n        username: user.username,\r\n        password: user.password,\r\n        bio: UserBio,\r\n\r\n      });\r\n      let options = {\r\n        method: 'POST',\r\n        body: data,\r\n        headers: {\r\n          // Accept: 'application/json',\r\n          // 'Content-Type': 'multipart/form-data',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer e3fff09e-576b-4a08-8529-e88efd8eb5d5',\r\n        },\r\n      };\r\n      let res = await fetch(Constants.EditUserBio, options);\r\n      let resData = await res.text();\r\n      if (resData != 'Done')\r\n        console.log(resData);\r\n      else\r\n        await fetching();\r\n    }\r\n    else {\r\n      console.log('UserBio is null');\r\n    }\r\n  }\r\n\r\n\r\n  const GotoProducts = () => {\r\n    props.navigation.navigate('CreateProduct');\r\n  }\r\n  if (loading || !loaded) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={fetching}\r\n        onFinish={() => setLoading(false)}\r\n        onError={console.warn}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#fff' }}>\r\n      <Header title={user.username} CanGoBack={false} />\r\n      {loading && <View>\r\n        <Text>profile</Text>\r\n      </View>}\r\n      {user &&\r\n\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n\r\n          <>\r\n            <View>\r\n              <Image\r\n                style={styles.coverImage}\r\n                blurRadius={5}\r\n                // source={{ uri: 'https://picsum.photos/500/500?random=211' }}\r\n                source={{ uri: 'https://randomuser.me/api/portraits/women/46.jpg' }}\r\n              />\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n              {/* Profile Details */}\r\n              <View>\r\n                {/* Profile Image */}\r\n                <View style={styles.profileImageView}>\r\n                  <Image\r\n                    style={styles.profileImage}\r\n                    source={{\r\n                      uri: 'https://randomuser.me/api/portraits/women/46.jpg',\r\n                    }}\r\n                  />\r\n                </View>\r\n                {/* Profile Name and Bio */}\r\n                <View style={styles.nameAndBioView}>\r\n                  <Text style={styles.userFullName}>{user.firstName + \" \" + user.lastName}</Text>\r\n                  <View style={{\r\n                    flexDirection: 'row', padding: 10,\r\n                    justifyContent: 'space-between'\r\n                  }}>\r\n\r\n                    <Text style={styles.userBio}>\r\n\r\n                      {user.bio}</Text>\r\n                    <TouchableOpacity onPress={() => setShowDialog(true)}>\r\n                      <AntDesign name=\"edit\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n                {/* Posts/Followers/Following View */}\r\n                <View style={styles.countsView}>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>13</Text>\r\n                    <Text style={styles.countText}>Posts</Text>\r\n                  </View>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>1246</Text>\r\n                    <Text style={styles.countText}>Followers</Text>\r\n                  </View>\r\n                  <View style={styles.countView}>\r\n                    <Text style={styles.countNum}>348</Text>\r\n                    <Text style={styles.countText}>Following</Text>\r\n                  </View>\r\n                </View>\r\n                {/* Interact Buttons View */}\r\n                <View style={styles.interactButtonsView}>\r\n                  <TouchableOpacity style={styles.interactButton}>\r\n                    <Text style={styles.interactButtonText}>Follow</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => props.navigation.navigate('CreateProduct', { userId: user.id })}\r\n                    style={styles.interactButton}>\r\n                    <Text\r\n                      style={styles.interactButtonText}>\r\n                      Products\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                {/* Mutual Followed By Text */}\r\n                <View style={{ paddingHorizontal: 25, marginTop: 10 }}>\r\n                  <Text style={{ fontFamily: 'SourceSansProRegular', fontSize: 16 }}>\r\n                    {'Followed by '}\r\n                    <Text style={{ fontFamily: 'SourceSansProBold' }}>john_doe </Text>\r\n                    {'and '}\r\n                    <Text style={{ fontFamily: 'SourceSansProBold' }}>19 others</Text>\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              {/* Profile Content */}\r\n              <View style={{ marginTop: 20 }}>\r\n                <View style={styles.profileContentButtonsView}>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: (showContent === 'Photos') ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Photos')}>\r\n                    <Text style={styles.showContentButtonText}>Photos</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: showContent === 'Albums' ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Albums')}>\r\n                    <Text style={styles.showContentButtonText}>Albums</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={{\r\n                      ...styles.showContentButton,\r\n                      borderBottomWidth: showContent === 'Tags' ? 2 : 0,\r\n                    }}\r\n                    onPress={() => setShowContent('Tags')}>\r\n                    <Text style={styles.showContentButtonText}>Tags</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                {showContent === 'Photos' ? (\r\n                  <Photos photos={new Array(13).fill(1)} />\r\n                ) : showContent === 'Albums' ? (\r\n                  <Albums data={userProducts} ProductHanler={GotoProducts} />\r\n                ) : (\r\n                  <Tags photos={new Array(23).fill(1)} />\r\n                )}\r\n              </View>\r\n            </View>\r\n          </>\r\n          <Dialog visible={ShowDialog} title=\"Edit Your Bio\" onClose={() => setShowDialog(false)} OnSubmit={EditUserBio}>\r\n            <TextInput\r\n              placeholder=\"Your Bio\"\r\n              placeholderTextColor=\"#808e9b\"\r\n              style={styles.input}\r\n\r\n              keyboardType=\"default\"\r\n              bind={UserBio}\r\n              value={UserBio}\r\n              onChangeText={(e) => setUserBio(e)}\r\n            />\r\n          </Dialog>\r\n        </ScrollView>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  coverImage: { height: 300, width: '100%' },\r\n  profileContainer: {\r\n    // height: 1000,\r\n    backgroundColor: '#fff',\r\n    marginTop: -100,\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n  },\r\n  profileImageView: { alignItems: 'center', marginTop: -50 },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100,\r\n    borderWidth: 3,\r\n    borderColor: '#fff',\r\n  },\r\n  nameAndBioView: { alignItems: 'center', marginTop: 10 },\r\n  userFullName: { fontFamily: 'SourceSansProBold', fontSize: 26 },\r\n  userBio: {\r\n    fontFamily: 'SourceSansProRegular',\r\n    fontSize: 18,\r\n    color: '#333',\r\n    marginTop: 4,\r\n  },\r\n  countsView: { flexDirection: 'row', marginTop: 20 },\r\n  countView: { flex: 1, alignItems: 'center' },\r\n  countNum: { fontFamily: 'SourceSansProBold', fontSize: 20 },\r\n  countText: { fontFamily: 'SourceSansProRegular', fontSize: 18, color: '#333' },\r\n  interactButtonsView: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  interactButton: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#4b7bec',\r\n    margin: 5,\r\n    borderRadius: 4,\r\n  },\r\n  interactButtonText: {\r\n    fontFamily: 'Bold',\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    paddingVertical: 6,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#e9e9e9',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    outlineStyle: 'none',\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#333333',\r\n  },\r\n  profileContentButtonsView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    height: 60,\r\n\r\n    // marginBottom:10,\r\n    borderTopWidth: 2,\r\n    borderTopColor: '#f1f3f6',\r\n  },\r\n  showContentButton: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomColor: '#000',\r\n  },\r\n  showContentButtonText: {\r\n    // fontFamily: 'SourceSansProRegular',\r\n    fontSize: 18,\r\n    fontFamily: 'SourceSansProBold',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}