{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, DefaultTheme, Paragraph, Dialog, Portal, Provider } from 'react-native-paper';\nimport Color from \"../Models/Color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 3,\n  dark: true,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: Color.primary\n  })\n});\n\nvar MyComponent = function MyComponent(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      onvisible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDialog = function showDialog() {\n    return setVisible(true);\n  };\n\n  var hideDialog = function hideDialog() {\n    return _regeneratorRuntime.async(function hideDialog$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            props.onClose();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var submit = function submit() {\n    return _regeneratorRuntime.async(function submit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(props.OnSubmit());\n\n          case 2:\n            props.onClose();\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsx(View, {\n      children: _jsx(Portal, {\n        children: _jsxs(Dialog, {\n          visible: props.visible && onvisible,\n          dismissable: true,\n          onDismiss: hideDialog,\n          children: [_jsx(Dialog.Title, {\n            children: props.title\n          }), _jsx(Dialog.Content, {\n            children: props.children\n          }), _jsx(Dialog.Actions, {\n            children: _jsx(Button, {\n              onPress: submit,\n              children: \"Done\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default MyComponent;","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Components/Dialog.js"],"names":["React","Button","DefaultTheme","Paragraph","Dialog","Portal","Provider","Color","theme","roundness","dark","colors","primary","MyComponent","props","useState","onvisible","setVisible","showDialog","hideDialog","onClose","submit","OnSubmit","visible","title","children"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,MAAT,EAAgBC,YAAhB,EAA8BC,SAA9B,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyDC,QAAzD,QAAyE,oBAAzE;AACA,OAAOC,KAAP;;;;AACA,IAAMC,KAAK,mCACNN,YADM;AAETO,EAAAA,SAAS,EAAE,CAFF;AAGTC,EAAAA,IAAI,EAAC,IAHI;AAITC,EAAAA,MAAM,kCACDT,YAAY,CAACS,MADZ;AAEJC,IAAAA,OAAO,EAAEL,KAAK,CAACK;AAFX;AAJG,EAAX;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,wBAAgCd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,UAAlB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAnB;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAEjBL,YAAAA,KAAK,CAACM,OAAN;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAMA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPP,KAAK,CAACQ,QAAN,EADO;;AAAA;AAEbR,YAAAA,KAAK,CAACM,OAAN;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAMA,SACE,KAAC,QAAD;AAAW,IAAA,KAAK,EAAEZ,KAAlB;AAAA,cACE,KAAC,IAAD;AAAA,gBAEE,KAAC,MAAD;AAAA,kBACE,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAEM,KAAK,CAACS,OAAN,IAAiBP,SAAlC;AAA6C,UAAA,WAAW,EAAE,IAA1D;AAAgE,UAAA,SAAS,EAAEG,UAA3E;AAAA,qBACE,KAAC,MAAD,CAAQ,KAAR;AAAA,sBAAiBL,KAAK,CAACU;AAAvB,YADF,EAEE,KAAC,MAAD,CAAQ,OAAR;AAAA,sBACCV,KAAK,CAACW;AADP,YAFF,EAME,KAAC,MAAD,CAAQ,OAAR;AAAA,sBACE,KAAC,MAAD;AAAQ,cAAA,OAAO,EAAEJ,MAAjB;AAAA;AAAA;AADF,YANF;AAAA;AADF;AAFF;AADF,IADF;AAmBD,CApCD;;AAsCA,eAAeR,WAAf","sourcesContent":["import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Button,DefaultTheme, Paragraph, Dialog, Portal, Provider } from 'react-native-paper';\r\nimport Color from '../Models/Color';\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  roundness: 3,\r\n  dark:true,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: Color.primary,\r\n  },\r\n};\r\nconst MyComponent = (props) => {\r\n  const [onvisible, setVisible] = React.useState(true);\r\n\r\n  const showDialog = () => setVisible(true);\r\n\r\n  const hideDialog = async() => {\r\n    // await props.OnSubmit();\r\n    props.onClose();\r\n    // setVisible(false);\r\n  }\r\n\r\n  const submit = async() => {\r\n    await props.OnSubmit();\r\n    props.onClose();\r\n    // setVisible(false);\r\n  }\r\n\r\n  return (\r\n    <Provider  theme={theme}>\r\n      <View  >\r\n      {/* <Button onPress={showDialog}>Show Dialog</Button> */}\r\n        <Portal>\r\n          <Dialog visible={props.visible && onvisible} dismissable={true} onDismiss={hideDialog}>\r\n            <Dialog.Title  >{props.title}</Dialog.Title>\r\n            <Dialog.Content>\r\n            {props.children}\r\n              {/* <Paragraph>This is simple dialog</Paragraph> */}\r\n            </Dialog.Content>\r\n            <Dialog.Actions>\r\n              <Button onPress={submit}>Done</Button>\r\n            </Dialog.Actions>\r\n          </Dialog>\r\n        </Portal>\r\n      </View>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}