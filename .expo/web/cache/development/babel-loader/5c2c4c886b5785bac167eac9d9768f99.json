{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Icon } from 'react-native-elements';\nimport Color from \"../Models/Color\";\nimport Login from \"../Components/Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Username = _useState2[0],\n      SetUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      SetPassword = _useState4[1];\n\n  useEffect(function () {\n    StatusBar.setBarStyle('light-content', true);\n  }, []);\n\n  var loginUser = function loginUser() {\n    if (Username.length <= 0) Alert.alert('Error', 'We Cant Help you without Username/Email');else if (Password.length <= 0) Alert.alert('Error', 'PLease provid us password');else {\n      if (Username == 'admin' && Password == '255') {\n        Alert.alert('Login Successfully', 'PLease wait');\n        console.log('Logined');\n        props.navigation.navigate('Profile');\n      } else {\n        Alert.alert('Login failed', 'Username or password is in correct');\n        console.log('Failed');\n      }\n    }\n  };\n\n  return _jsxs(Login, {\n    Title: \"Login\",\n    loginUser: loginUser,\n    navigation: props.navigation,\n    children: [_jsx(TextInput, {\n      placeholder: \"Email Address\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      autoCorrect: true,\n      autoCompleteType: \"email\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      bind: Username,\n      onChangeText: function onChangeText(e) {\n        return SetUserName(e);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      placeholderTextColor: \"#808e9b\",\n      style: styles.input,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      bind: Password,\n      onChangeText: function onChangeText(e) {\n        return SetPassword(e);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  input: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#333',\n    borderRadius: 6,\n    marginTop: 10,\n    paddingHorizontal: 10,\n    fontSize: 16,\n    color: '#808e9b'\n  }\n});","map":{"version":3,"sources":["D:/FYP/FYPNativeStuff/App/Archive/Screens/LoginScreen.js"],"names":["React","useEffect","useState","LinearGradient","Icon","Color","Login","LoginScreen","props","Username","SetUserName","Password","SetPassword","StatusBar","setBarStyle","loginUser","length","Alert","alert","console","log","navigation","navigate","styles","input","e","StyleSheet","create","width","height","backgroundColor","borderRadius","marginTop","paddingHorizontal","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  StatusBar,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Icon } from 'react-native-elements';\r\nimport  Color from '../Models/Color';\r\nimport  Login from '../Components/Login';\r\n\r\nexport default  function LoginScreen(props) {\r\n  const [Username , SetUserName] = useState('');\r\n  const [Password, SetPassword] = useState('');\r\n  useEffect(() => {\r\n    StatusBar.setBarStyle('light-content', true);\r\n  }, []);\r\n\r\n  const loginUser = () => {\r\n    if (Username.length <= 0)\r\n      Alert.alert('Error', 'We Cant Help you without Username/Email');\r\n    else if (Password.length <= 0)\r\n      Alert.alert('Error', 'PLease provid us password');\r\n    else {\r\n      if (Username == 'admin' && Password == '255') {\r\n        Alert.alert('Login Successfully', 'PLease wait');\r\n        console.log('Logined');\r\n        props.navigation.navigate('Profile');\r\n      } \r\n      else {\r\n        Alert.alert('Login failed', 'Username or password is in correct');\r\n\r\n        console.log('Failed');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Login Title=\"Login\" loginUser={loginUser} navigation={props.navigation}>\r\n       <TextInput\r\n          placeholder=\"Email Address\"\r\n          placeholderTextColor=\"#808e9b\"\r\n          style={styles.input}\r\n          autoCorrect={true}\r\n          // autoCapitalize={false}\r\n          autoCompleteType=\"email\"\r\n          keyboardType=\"email-address\"\r\n          textContentType=\"emailAddress\"\r\n          bind={Username}\r\n          onChangeText={(e) => SetUserName(e)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#808e9b\"\r\n          style={styles.input}\r\n          secureTextEntry={true}\r\n          textContentType=\"password\"\r\n          bind={Password}\r\n          onChangeText={(e) => SetPassword(e)}\r\n        />\r\n    </Login>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  input: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: '#333',\r\n    borderRadius: 6,\r\n    marginTop: 10,\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    color: '#808e9b',\r\n  },\r\n   \r\n});\r\n"]},"metadata":{},"sourceType":"module"}